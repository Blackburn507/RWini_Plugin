
const allKeys = {
core:{
    name:['string','core','名字','定义单位原始名称,可以是中文.游戏使用它区分其它单位.如果没有在displayText或者语言文件设置显示名称,那么它也将作为单位的显示名称.'],
    altNames:['string','core','别名','以逗号分隔的名称列表.像名称一样,但优先级较低,对于启用多个自定义nod有用.'],
    class:['string','core','类','无实际用处,可以删除.Luke说:保留供将来使用,默认情况下最好为CustomUnitMetadata.'],
    strictLevel:['float','core','严格级别','默认值为0,忽略代码重复.设为1时如果当前单位内有重复代码,则报错.建议添加到"all-units.template"以应用于所有单位,进行统一查错.'],
    price:['int(price)','core','价格','设定单位造价,可以是负数,负数时提直接供资金.'],
    mass:['int','core','质量','影响与其他单位的碰撞方式,值越大,推动就越困难.'],
    techLevel:['int','core','科技等级','设置单位的科技等级,共有3个级别,1级GUI显示为绿色,2,3级显示为黄色.'],
    buildSpeed:['time','core','建造速度','建造此单位需要的时间,填秒.以前的计算方式为:此处所填时间=1÷(60x你需要的秒)如果定义了工厂速率则需要乘以建造乘数.'],
    radius:['int','core','半径','单位的实际碰擦体积,也是实际的可选择范围.其光圈在displayRadius覆盖时真实体积不变.'],
    isBio:['bool','core','是生物','此单位是否为生物,为生物则影响死亡声音和血迹(图像在drawable/blood_mark.png,hideScorchMark:true时可以隐藏)非生物则为黑色爆炸效果.'],
    isBug:['bool','core','是虫子','是否为虫子,用于沙盒中的单独分类.'],
    isBuilder:['bool','core','是建造者','若需要此单位建造建筑物,则通常需要此代码.并且默认设为[ai]useAsBuilder.'],
    streamingCost:['int(price)','core','流式造价','就像价格,但在建造时逐渐消耗资金,如果在构建过程中资源耗尽,建造或生产队列将暂停.就像是红警中那样.铁锈默认是预先扣除资金.'],
    switchPriceWithStreamingCost:['bool','core','切换价格为流造价','快捷设置为默认资金消耗方式或为流式建造方式.建议使用模板快速将一个模组为所有单位切换流资源.'],
    maxHp:['int','core','生命值','单位最大生命值,默认生成时即为此值.'],
    selfRegenRate:['float','core','生命恢复速度','此数值决定每帧增加血量.游戏内默认速度下,一秒为60逻辑帧,而你看到的FPS帧数为渲染帧,所以电脑上几百帧和手机上60帧和省电模式下30帧并不影响计算.所以不要写太大.可以写负值用于自毁.'],
    maxShield:['int','core','护盾值','单位最大护盾值,默认生成时即为此值.如果设置了startShieldAtZero:true,则初始为0.'],
    startShieldAtZero:['bool','core','护盾初始为0','如果为true,则单位护盾值从0开始增加.'],
    shieldRegen:['float','core','护盾恢复速度','此数值决定每帧增加护盾值,游戏内一秒为60帧,所以不要写太大.可以写负值.'],
    energyMax:['float','core','能量值','默认值为0.可以用作炮塔,激光防御和行动的弹药的能量.'],
    startEnergyAtZero:['bool','core','能量初始为0','如果为true,则单位能量值从0开始增加.'],
    energyRegen:['float','core','能量恢复速度','能量每帧恢复速度,游戏内一秒为60帧,所以不要写太大.可以写负值.'],
    energyRegenWhenRecharging:['float','core','充能时能量恢复速度','能量恢复是持续的,如果你设置了energyNeedsToRechargeToFull,那么攻击时按energyRegen恢复,耗尽时的灰条按此处设定值恢复.'],
    energyStartingPercentage:['float','core','能量初始百分比','单位生成时所携带的能量百分比.'],
    energyNeedsToRechargeToFull:['bool','core','能量需要充满','若果能量耗尽,则需要完全充能才能进行攻击.'],
    energyDisplayName:['string','core','能量显示名称','能量显示名称,截止1.15似乎无效'],
    armour:['int','core','装甲','抵消敌方攻击所造成的伤害.'],
    armourMinDamageToKeep:['int','core','装甲最低伤害','至少造成多少点伤害,默认为1,防止护甲太高完全打不动.'],
    borrowResourcesWhileAlive:['price','core','资源活着时借用','创建时获取这些资源,删除或销毁时将其返回.例如用于电力逻辑,负数供电和正数耗电.'],
    borrowResourcesWhileBuilt:['price','core','资源在单位建成后借用','类似于[core]borrowResourcesWhileAlive但在单位建成后才会生效.主要对房屋之类的建筑有用,这些建筑有负的资源,可以加到单位上限等'],
    generation_resources:['price','core','资源获取','单位定时获得的资源,可自定义资源.'],
    generation_active:['logicBoolean','core','资源取得条件','获取资源条件.可用于受损时无法产出.'],
    generation_credits:['int','core','资金获取','生成资源,仅用于默认的资金,也就是铁锈默认的金钱.'],
    generation_delay:['int','core','资金获取时间','多久帧添加添加一次资源(generation_creditsvi指定数值).默认值为40,一秒为60帧.Luke不建议使用.'],
    showInEditor:['bool','core','显示在沙盒中','设置为false可在沙箱编辑器中隐藏此单位. (默认为true)'],
    displayText:['string','core','界面显示名称','默认单位显示给玩家的单位名称.不填则显示core下的单位name.此条目依据语言设定不同会被下一条覆盖.'],
    'displayText_language':['string','core','界面显示文本多语言','为单位名称添加多语言支持.'],
    displayDescription:['string','core','界面显示描述','单位显示给玩家的单位描述.'],
    'displayDescription_language':['string','core','界面显示描述_其它语言','为单位描述添加多语言支持.此方法并不方便,不如设置游戏内部语言文件,建议催luke改.地区码见上.'],
    displayLocaleKey:['string','core','界面显示内部调用','调用内部语言文件的单位名称和说明的翻译文件.'],
    displayRadius:['int','core','单位选择时显示圆圈','修改选择单位时显示的绿色圆圈,不更改实际碰撞(radius)和可选择范围.'],
    uiTargetRadius:['int','core','为目标时半径','默认值为displayRadius.当攻击/回收/等等这个单位使用半径'],
    shieldRenderRadius:['int','core','单位护盾显示半径','护盾绘制半径,默认值比半径大一点.可以设置在单位上显示更大或更小的护盾圈.'],
    shieldDisplayOnlyDeflection:['bool','core','护盾只在受攻击时显示','隐藏护盾,只在受到攻击时显示.'],
    shieldDeflectionDisplayRate:['float','core','护盾消失速度','默认值为4.数值越大消失越快.'],
    showOnMinimap:['bool','core','显示在小地图上','默认为true.如果为false,则在小地图上不显示此单位.'],
    showOnMinimapToEnemies:['bool','core','显示于敌人小地图','是否在敌人小地图上显示.目前不支持逻辑.'],
    showActionsWithMixedSelectionIfOtherUnitsHaveTag:['string','core','混合所选单位所显示的行为(标签)','如果选择的单位都包含此处使用的标签,则合并“行为(action)”.比如你的步单位通过部署转化成另一个单位,在混合时可以当作同一个单位处理,不再是默认的谁都无法执行操作.例子如红警的盟军大单位在混合选中后依旧可执行部署或解除.'],
    isBuilding:['bool','core','是建筑','定义单位是否为建筑物.'],
    footprint:['other','core','建筑碰撞范围','填四个数值(左,上,右,下),单位是格子,建筑默认占一格,向左和向上需要填负数,填整数在选择时有偏移.四个数值可以完全颠倒,这样不会阻碍单位移动.决定建筑单位碰撞体积,此区域内单位不能通过,如果在单位运动途中单位则会绕过.单位实际可选择面积使用的是radius.'],
    constructionFootprint:['other','core','建筑覆盖范围','基础规则同上,这个区域内不能建造建筑,但是单位可以通过.一般需要设定比上一个面积大.好处是即使建造的密密麻麻,单位也有路可走'],
    displayFootprint:['other','core','建筑选择UI','基础规则同上,用于选择单位时UI显示.不设定则默认为建筑覆盖区域.'],
    buildingSelectionOffset:['int','core','建筑UI调整','默认值为0.以像素为单位对选框额外设定.'],
    buildingToFootprintOffsetX:['float','core','建筑X轴偏移','设置X轴位置偏移,默认10.若设置非对称的建筑,单位会根据覆盖范围会挤在角上,这时如果要准确显示就需要额外偏移.与直接使用图像偏移的区别:由于铁锈判断选中单位是根据单位体积(radius),因此图像偏移实际上单位的位置不变,会容易造成点击时的误差.而当前代码实际上是移动单位,则不会造成这个问题.'],
    buildingToFootprintOffsetY:['float','core','建筑Y轴偏移','设置Y轴位置偏移,默认10.其它参上条'],
    placeOnlyOnResPool:['bool','core','建筑只能建造在资源池上','通常用于提取器,会强制在资源池中进行建筑物构造.可以用于在自定义战役中限制某单位只能在某地建造.'],
    selfBuildRate:['float','core','自动建造速度','此单位自动构造所需要的时间,目前用于虫族.计算方式为:此处所填时间=1÷(60x你需要的秒).'],
    ignoreInUnitCapCalculation:['bool','core','不计入单位数量统计','铁锈中有单位数量上限设定,填true时不计入统计,多用于辅助单位,建筑物的默认值为true.'],
    copyFrom:['file-text','core','复制数据自','加载其它文件的单位数据作为该单位的默认值,支持多个文件.无后缀名限制,可不写dont_load,用于模块化.'],
    dont_load:['bool','core','禁止加载','不加载此单位,缺失数据时不会出错.与copyFrom一起使用时很有用.'],
    overrideAndReplace:['unit','core','覆盖单位','用此单位覆盖另一个单位,地图上所有单位也将被替换,可以用来替换dex内无法修改的单位.'],
    overrideResourceLoadPath:['bool','core','覆盖资源加载路径',''],
    logIfCreditResourceUsed:['bool','core','记录是否使用资源',''],
    onNewMapSpawn:['string','core','地图位置产生指定单位','在地图上添加此单位.可以用于覆盖铁锈默认的资源逻辑.参数:emptyResourcePools_asNeutral 产生位置于空资源池为中立所属, emptyOrOccupiedResourcePools_asNeutral空的或者已经占用的资源池为中立所属, mapCenter_asNeutral地图中心为中立所属, mapCenter_eachActiveTeam地图中心给与每个队伍, spawnPoint_eachActiveTeam玩家初始位置给与每个队伍'],
    globalScale:['float','core','全局缩放','废弃代码,不要用.将一个单位按比例放大,但不放大攻击力.默认值为1.不建议更改.'],
    isLocked:['bool','core','锁定','禁止建造该单位.可以与overrideAndReplace一起使用,以限制玩家可以建造的单位.'],
    isLockedIfGameModeNoNuke:['bool','core','禁核模式锁定','如果在游戏开始前选择了禁用核武器,禁止建造此单位.'],
    experimental:['bool','core','实验单位标志','标记单位为实验单位.影响缩小图标和游戏结束统计.'],
    stayNeutral:['bool','core','保持中立','设置为false时,单位处于中立队伍情况下,禁止靠近时更改为玩家所属.仍然有其它方式获得.'],
    createNeutral:['bool','core','创建时中立','设置为true时,产生该单位总是自动转变为中立队伍.创建时中立,但不妨碍玩家捕获.'],
    createOnAggressiveTeam:['bool','core','创建为敌对中立','设置为true时,此中立单位对所有玩家有敌意.'],
    tags:['string','core','标签','标签,用于对单位进行分类,用于实现各种各样的特殊作.比如单位数量限制,伤害修正,增益损益,触发条件等等'],
    defineUnitMemory:['other','core','定义内存变量','为单位创建一个自定义变量(作用域为单个ini). 支持的类型:boolean(bool),float,number,unit,string,text,boolean[],float[],number[],unit[]. (格式:defineUnitMemory:boolean nukeActive, float[] newHp)'],
    updateUnitMemory:['memory','core','更新单位内存','类似[action]setUnitMemory但是性能更好'],
    updateUnitMemoryRate:['time','core','更新单位内存频率','默认1s,填写0则为每帧'],
    fogOfWarSightRange:['int','core','视野','设置单位视野,在战争迷雾中可以看到的瓷砖数量.默认为15.'],
    fogOfWarSightRangeWhileNotBuilt:['int','core','未完成时视野','填数值,当建筑或单位没有建造完成时,它的视野范围'],
    softCollisionOnAll:['int','core','碰撞体积软化','与其他单位碰撞时产生柔和的碰撞效果,填负数会导致单位相互吸引.'],
    disableAllUnitCollisions:['bool','core','禁用碰撞','如果为true,则该单位无视与其它单位碰撞.无碰撞体积单位可以用于固定位置制造效果,或是用于一些不影响单位通行的场景.'],
    availableInDemo:['bool','core','在演示版中可用','是否能在演示中使用'],
    isUnrepairableUnit:['bool','core','禁止被修复','如果为true,则任何单位都无法修复此单位.但负伤害仍然可以维修.'],
    isUnselectable:['bool','core','禁止选择','如果为true,则无法选择单位. (包括AI)可用于效果单位,禁止被玩家选择.'],
    isUnselectableAsTarget:['bool','core','禁止选择和作为目标','默认效果为isUnselectable.可以用来创造不能被选择但是可以被攻击,回收的单位'],
    isPickableStartingUnit:['bool','core','为可选初始单位','如果为true,则将单位添加到游戏高级设置菜单中,用于可选初始单位菜单.'],
    startFallingWhenStartingUnit:['bool','core','为可选单位开局后从天而降','如果为true,则游戏开始时,此单位会从从天而降.'],
    soundOnAttackOrder:['file-sound','core','攻击指令音效','填音效名称列表.用,隔开.每次下达攻击指令时只播放其中一个.仅支持.ogg和.wav格式,注意如果你mod用于pc端,则不要直接修改后缀名,要转换格式.'],
    soundOnMoveOrder:['file-sound','core','移动指令音效','填声音名称列表.用,隔开.每次下达移动指令时只播放其中一个.仅支持.ogg和.wav格式,注意不要直接修改后缀名,要转换格式.'],
    soundOnNewSelection:['file-sound','core','选择指令音效','填声音名称列表.用,隔开.每次下达选择指令时只播放其中一个.仅支持.ogg和.wav格式,注意不要直接修改后缀名,要转换格式.'],
    canNotBeDirectlyAttacked:['bool','core','禁止直接攻击','注:如果初始单位有这个属性且可能会导致游戏开局就秒输时,Mod作者会看到警告消息'],
    canNotBeDamaged:['bool','core','禁止受到伤害','无敌,可被敌方攻击,但不造成实质伤害.如果canNotBeDirectlyAttacked为true,此语句为false,则不可被直接攻击但受到范围伤害.'],
    canNotBeGivenOrdersByPlayer:['bool','core','禁止接受指令','如果为true,则单位不会接受玩家或AI的命令.可以选中查看信息.'],
    canOnlyBeAttackedByUnitsWithTags:['string','core','仅许带此标签单位攻击','填标签,只有带有这些标签的单位才能直接定位到该单位.'],
    allowCaptureWhenNeutralByAI:['bool','core','允许中立时被AI俘虏','(推测,以前人机不能捕获中立单位)'],
    transportSlotsNeeded:['int','core','运输占用位置','默认值为1.此单位在运输载具中占据的格子数.'],
    maxTransportingUnits:['int','core','运输槽位数量','该单位载员格子数量.'],
    transportUnitsRequireTag:['string','core','被运输单位需要标签','仅允许运输具有这些标签之一的单位.可以用于运输类型分类,如人运物资,步单位车运人,气垫船运车辆.或是子机限制,如航母飞机只能降落到航母.'],
    transportUnitsRequireMovementType:['other','core','被运输单位类型限制','仅允许运输具有这些移动类型之一的单位.默认陆地.比如可以设定某单位可以运输空军以实现停机坪,只运输海军等.'],
    transportUnitsBlockAirAndWaterUnits:['bool','core','禁止运输空军和海军','禁止运输空军和海军,默认为true.如果为true,则此单位只能运输LAND单位.'],
    transportUnitsKeepBuiltUnits:['logicBoolean','core','单位建造完成时保留在载具内','使建造的单位留在运输者中,而不是造完直接从载具中出来.'],
    transportUnitsCanUnloadUnits:['logicBoolean','core','载具可以卸载单位','载具卸载单位需要满足条件,默认为“ if not self.isOverLiquid() and not self.isMoving()”(不在液体上且没有移动)'],
    transportUnitsAddUnloadOption:['logicBoolean','core','载具显示卸载按钮','是否显示卸载按钮'],
    transportUnitsUnloadDelayBetweenEachUnit:['float','core','载具卸载时间间隔','卸载单位之间的延迟时间.'],
    transportUnitsKillOnDeath:['logicBoolean','core','载具内单位和载具一同死亡','默认为true.如果载具死亡,则其中单位也死亡.'],
    transportUnitsHealBy:['float','core','载具治疗内部单位速度','填数值,以帧为单位.自动治疗载具内部单位.'],
    transportUnitsBlockOtherTransports:['bool','core','载具禁止装载其它载具','默认值为true,如果为false,则此载具可以装载其它载具.比如步单位装物资,载具装步单位,运输船装载具.'],
    whileNeutralTransportAnyTeam:['bool','core','中立时可装载任意所属单位','如果是中立的,则这个部队可以装载任何队伍的部队.可用于占领中立单位,比如坦克需要驾驶员,步单位建筑平民建筑.'],
    whileNeutralConvertToTransportedTeam:['bool','core','中立时转换为载员队伍','中立时将其转换为载员队伍.与whileNeutralTransportAnyTeam一起使用,用于占领中立单位.'],
    convertToNeutralIfNotTransporting:['bool','core','卸载所有单位时恢复为中立','卸载单位时将其恢复为中立队伍.与whileNeutralTransportAnyTeam一起使用.'],
    transportUnitsOnTeamChangeKeepCurrentTeam:['bool','core','转换所属时保留内部单位所属','如果为true,则单位转换阵营时仍然将运输的单位保留在其原始队伍中.'],
    transportUnitsEachUnitAlwaysUsesSingleSlot:['bool','core','载员只占用一个槽位','所有载员无论体积只占用一个运输槽.但体积大于载员数时仍然不能进入.'],
    transportUnitsKeepWaypoints:['bool','core','载员保持路径点','目前无效'],
    resourceRate:['float','core','回收速率','回收速度.每帧回收血量.与canReclaimResources一起使用.允许其他队伍回收该单位.通常与中立队伍配合使用.使用价格来设置获取哪些资源.'],
    similarResourcesHaveTag:['string','core','像用于此标签的单位','有这些标签时,资源采集单位将视为同一种资源'],
    resourceMaxConcurrentReclaimingThis:['int','core','可同时被此数目单位回收','默认为无限制.限制有多少单位可以同时回收此资源.'],
    reclaimPrice:['int','core','回收价格','自定义资源,类似价格.对于自定义资源很有用.'],
    canReclaimResources:['bool','core','可以回收资源','如果为true,则此单位可以收集资源,这对于resourceRate很有用.'],
    canReclaimResourcesNextSearchRange:['int','core','搜寻资源范围','当一处资源采集完后,搜寻更多资源的范围.'],
    canReclaimResourcesOnlyWithTags:['string','core','仅允许回收特定标签资源','仅允许回收有此标签的单位.'],
    resourceReclaimMultiplier:['float','core','建造单位回收资源的乘数','默认为1'],
    nanoUnbuildSpeed:['float','core','建造单位回收未完成单位速度','(俗称"蓝影",默认为1)'],
    canRepairBuildings:['bool','core','可以修建筑','如果为true,该单位可以修复建筑. (isBuilder:true是必需的)'],
    canRepairUnits:['bool','core','可以修单位','如果为true,此单位可以修复单位. (isBuilder:true是必需的)'],
    autoRepair:['bool','core','可以自动修','自动维修附近单位,范围为nanoRange. (isBuilder:true是必需的)'],
    canReclaimUnitsOnlyWithTags:['string','core','仅允许回收特定标签单位','仅允许此单位回收具有特定标签单位.'],
    canRepairUnitsOnlyWithTags:['string','core','仅允许维修特定标签单位','仅允许此单位维修具有特定标签单位.'],
    nanoRange:['int','core','维修或建造范围','默认值为85.定义单位的构建/修复/回收范围.'],
    nanoRepairSpeed:['float','core','维修速度','默认值为0.2.定义单位修复速度.'],
    nanoBuildSpeed:['float','core','建造速度','默认值为1.定义单位建造速度. (可能与目标的buildSpeed相乘)'],
    nanoReclaimSpeed:['float','core','回收速度','默认为nanoRepairSpeed*5.1'],
    nanoRangeForRepairIsMelee:['bool','core','维修范围按近战逻辑','定义此单位维修时是否为近战算法,默认计算是从自身中心到目标中心,如果单位过大运动会受到阻碍,则虽然看起来很近然而实际中心太远无法修复. 近战类算法则是算上其半径,由中心计算改为从边缘计算.'],
    nanoRangeForReclaimIsMelee:['bool','core','回收范围按近战逻辑','与上条类似,本条定义其回收范围是否为近战算法.'],
    nanoRangeForRepair:['int','core','维修距离','此单位维修距离.'],
    nanoRangeForReclaim:['int','core','回收距离','此单位回收距离.'],
    nanoFactorySpeed:['float','core','工厂速度乘数','默认值为1.如果此单位是工厂,则乘以创建单位的buildSpeed值.用于加速或者减速建造.'],
    extraBuildRangeWhenBuildingThis:['int','core','额外建造距离','此单位额外的建造距离,可以使建造者在更远的地方建造它,多用于水上建筑.'],
    builtFrom_x_name:['string','core','从此单位建造','除非你向原版工厂添加单位,否则不建议使用.将该单位添加到目标建筑物中.'],
    builtFrom_x_pos:['float','core','从此单位建造排序','在列表中的排序,越小越靠前.'],
    builtFrom_x_forceNano:['bool','core','从此单位像建筑一样建造','如果为true,则像构建建筑一样造此单位. (即使是一个单位)'],
    builtFrom_x_isLocked:['logicBoolean','core','从此单位建造条件','如果为true,则无法在目标中构建此单位. (逻辑布尔值,设置建造条件)'],
    builtFrom_x_isLockedMessage:['string','core','从此单位建造锁定信息','无法建造时显示的信息.'],
    exit_x:['float','core','离开x轴','从载具卸载或者工厂生产完成时,单位出现的位置,默认为0'],
    exit_y:['float','core','离开y轴','从载具卸载或者工厂生产完成时,单位出现的位置,默认为5,正数向下.'],
    exit_dirOffset:['float','core','离开旋转角度','单位默认为180(朝下),建筑物默认为0(朝右).定义已创建或卸载单位的退出方向.'],
    exit_heightOffset:['float','core','离开高度','默认值为0.定义创建或卸载的单位出现的高度.'],
    exit_moveAwayAmount:['float','core','离开距离','默认值为70.定义创建或卸载的单位与该单位的距离.'],
    exitHeightIgnoreParent:['bool','core','离开高度忽略父单位','离开时的高度不考虑父高度;用于与父单位一起建造时分离附件'],
    dieOnConstruct:['bool','core','构建时死亡','如果为true,则创建建筑时删除自身.(目标建筑物/单位需要selfBuildRate以自动建造完成)'],
    dieOnZeroEnergy:['bool','core','无能量时死亡','如果能量值为零,该单位死亡.'],
    numBitsOnDeath:['int','core','死亡产生碎片','定义该单位死亡时散落的碎片的数量.'],
    nukeOnDeath:['bool','core','死亡核爆','不推荐使用.建议使用死亡武器代替,其拥有更丰富的设定选项.如果为true,单位死亡时会生成一个内置的核抛射体爆炸效果.'],
    nukeOnDeathRange:['float','core','死亡核爆范围','不推荐使用.定义使用nukeOnDeath时的核抛射体效果范围.'],
    nukeOnDeathDamage:['float','core','死亡核爆伤害','不推荐使用.定义使用nukeOnDeath时的核武器效果区域伤害.'],
    nukeOnDeathDisableWhenNoNuke:['bool','core','死亡核爆条件','不推荐使用.默认为false.如果为true,则禁用核武器时,该单位死亡时不会产生核爆炸.'],
    fireTurretXAtSelfOnDeath:['turretRef','core','死亡武器','死亡武器.单位死后,使用指定炮塔攻击自身所在位置.'],
    explodeOnDeath:['bool','core','死亡爆炸','默认为true.如果为false,则禁用单位死亡时的内置爆炸效果.'],
    explodeOnDeathGroundCollision:['boolean','core','死亡撞击地面爆炸','默认为true.如果为false,则禁用接触地面时内置爆炸效果.'],
    effectOnDeath:['effectRef','core','死亡效果','单位死亡时产生内置或自定义效果.'],
    effectOnDeathGroundCollision:['effectRef','core','死亡撞击地面效果','类似于effectOnDeath,但当单位接触地面时.对飞行单位有用.'],
    explodeOnDeathGroundCollosion:['effectRef','core','死亡未撞击地面效果','类似于effectOnDeath,但当未单位接触地面时.对飞行单位有用.'],
    unitsSpawnedOnDeath:['string','core','死亡产生单位','死亡时产生这些单位.逗号分隔的单位标识符.'],
    unitsSpawnedOnDeath_setToTeamOfLastAttacker:['bool','core','死亡产生单位所属','如果为true,死亡时产生的单位将更改归属为最后一个攻击者的队伍.'],
    hideScorchMark:['bool','core','死亡痕迹','如果为true,则禁止单位死亡时留下焦痕.'],
    soundOnDeath:['file-sound','core','死亡音效','为该单位设置自定义死亡声音.'],
    explodeTypeOnDeath:['effectRef','core','死亡时爆炸类型','可用的值:verysmall, small, normal, large, largeUnit, building, buildingNoShockwaveOrSmoke, verylargeBuilding'],
    effectOnDeathIfUnbuilt:['effectRef','core','没建造完成时死亡效果','如果这个单位没建造完成就被毁了,则播放此效果'],
    disableDeathOnZeroHp:['bool','core','禁用零血死亡','如果为true,允许单位在0血量的情况下仍然存活,单位不会自然死亡.对自定义“死亡”动作很有用'],
    autoTriggerCooldownTime:['time','core','自动触发间隔','设置自动触发动作间隔.默认为1s.警告:对于许多设备,将此值设置得太低可能会影响性能,具体取决于操作效果.'],
    autoTriggerCooldownTime_allowDangerousHighCPU:['bool','core','允许超高频触发','自动触发冷却时间,允许高CPU占用,也就是可以使用非常高频的触发,但不建议这么做.'],
    autoTriggerCheckWhileNotBuilt:['bool','core','在未建造完成时依然自动触发','- 默认为 false - 当 true 时,即使单位未完成建造,所有自动触发器仍在运行'],
    autoTriggerCheckRate:['other','core','自动触发检查率','选项:everyFrame(默认), every4Frames, every8Frames. 注:所有触发器无论检查率都是在第一次创建和自动触发冷却之后检查的. 注:应用every8Frames到所有单位,可以让使用了复杂autoTriggers的mod有巨大的性能提升.'],
    '@memory':['other','core','定义内存变量','defineUnitMemory的快捷方式(格式:@memory name:type)']
},

canBuild:{
    name:['string','canBuild','名字','该单位可以创建的单位名列表.可以是建筑物或单位.'],
    pos:['float','canBuild','排序','此单位在用户界面中排序,越小越靠上.'],
    tech:['int','canBuild','科技','没啥用.科技等级.通常只会影响此单位界面中的颜色.默认为1,只能填1,2,3.'],
    forceNano:['bool','canBuild','建造方式','如果为true,则将目标当作是建筑物建造. (即使是一个单位)'],
    isVisible:['logicBoolean','canBuild','可见条件','如果满足条件,则从界面中显示此单位.比如用于科技树.'],
    isLocked:['logicBoolean','canBuild','锁定','如果满足条件,则从界面中锁定此单位.比如用于科技树,或是限造单位.'],
    isLockedMessage:['string','canBuild','锁定原因描述','告知玩家单位为何被锁定.'],
    'isLockedMessage_language':['string','canBuild','锁定文本多语言','设置锁定文本在不同语言下显示的内容.语言代码点击此处.'],
    isLockedAlt:['logicBoolean','canBuild','更多锁定原因','另一个被锁定原因.只是允许显示不同的消息.'],
    isLockedAltMessage:['string','canBuild','锁定原因描述','另一个被锁定原因描述.'],
    isLockedAlt2:['logicBoolean','canBuild','更多锁定原因2','更多的锁定原因…'],
    isLockedAlt2Message:['string','canBuild','锁定文本2描述','更多的锁定描述…'],
    addResources:['resourceRef','canBuild','增加资源','在放置建筑物或生产单位时,将这些资源添加到自身中.'],
    price:['int(price)','canBuild','价格','覆盖单位/建筑物的价格. 默认为单位内置的价格.'],
    isGuiBlinking:['logicBoolean','canBuild','界面闪烁','如果为true,则在UI中生成闪烁效果.'],
    extraLagHidingInUI:['bool','canBuild','消除ui额外延迟','用于联机,在UI中立即更新而不需要从服务器确认的等待时间.']
},

graphics:{
    image:['file-image','graphics','主体图像','填图片名称,格式为png.'],
    image_back:['file-image','graphics','背景图像','可选的在单位后面绘制图像,不随单位转动.可用于工厂底图,单位角标等.'],
    image_back_always_use_full_image:['bool','graphics','图像背景总是使用完整的图像','默认会裁剪或拉伸或平铺到和主体图像一致.'],
    image_wreak:['file-image','graphics','死亡图像','可选的单位死亡时使用的图像.'],
    image_shield:['file-image','graphics','护盾图像','自定义护盾所使用的图像.'],
    image_offsetX:['int','graphics','图像X轴偏移','图像在X轴偏移,用于不对称图像,比如你的单位有个吊臂,这样中心不在正中间.'],
    image_offsetY:['int','graphics','图像Y轴偏移','图像在Y轴偏移,用于比较高的单位.'],
    isVisible:['logicBoolean','graphics','可见','默认为true,如果为false将隐藏单位.'],
    isVisibleToEnemies:['logicBoolean','graphics','对敌人可见','与showOnMinimapToEnemies,canOnlyBeAttackedByUnitsWithTags一起使用时,可以创建隐形系统.'],
    teamColorsUseHue:['bool','graphics','阵营色色相','luke不建议使用.单位上的绿色像素转换为团队颜色. 若为true整个单位都带有团队色彩. 默认为false,挺难看的.'],
    teamColoringMode:['string','graphics','阵营色模式','设置单位着色逻辑,默认是纯绿.有四个值disabled,hueShift,hueAdd,pureGreen.(禁用,色相偏移,色相添加,纯绿)'],
    scaleImagesTo:['float','graphics','缩放图像到','单位像素.调整图像大小以使其适合像素值.同时影响腿部和阴影图像.'],
    imageScale:['float','graphics','图像缩放比例','调整图像大小.默认值为1.也可以影响腿部和阴影图像.'],
    drawLayer:['string','graphics','绘制图层','陆上单位通常默认为ground或ground2.运输船为ground2.wreaks, underwater, bottom, ground, ground2, experimentals, air, top'],
    whenBeingBuiltMakeTransparentTill:['float','graphics','建造时透明度','设为0则一开始便完全不透明,设为1则直到建造完成时才不透明.'],
    icon_zoomed_out:['file-image','graphics','缩放图标','缩放时显示的图标'],
    icon_zoomed_out_neverShow:['bool','graphics','缩放图标永不显示','缩放图标永不显示.'],
    icon_build:['file-image','graphics','建造图标','填文件名,指定图像作为单位在列表中显示的图像.'],
    image_floatingPointSize:['bool','graphics','对奇数大小的图像进行一个像素的调整','(填写0/1,无直观区别,有说法是把x-1来改变单位坐标系使其更方便使用)--Fixes off by 1 pixel sizing for odd sized images -'],
    image_offsetH:['float','graphics','高度绘制偏移','height offset'],
    showSelectionIndicator:['bool','graphics','显示选择指示','(单位的选择框)'],
    image_turret:['file-image','graphics','炮塔图像','所有炮塔的默认图像,也可以为每个炮塔设置专用图像.'],
    turretImageScale:['float','graphics','炮塔图像缩放','按比例缩放炮塔图像'],
    teamColorsOnTurret:['bool','graphics','炮塔使用队伍色','默认为false.在转塔上也应用团队颜色.'],
    scaleTurretImagesTo:['float','graphics','炮塔图像缩放','单位像素.缩放炮塔图像至指定像素,只用填宽度'],
    lock_body_rotation_with_main_turret:['bool','graphics','锁定主体旋转随主炮塔','锁定主体图像旋转追随主炮塔'],
    lock_leg_rotation_with_main_turret:['bool','graphics','锁定腿脚旋转随主炮塔','锁定腿脚图像旋转追随主炮塔'],
    image_shadow:['file-image','graphics','阴影图像','填NONE或AUTO,或图像文件.'],
    shadowOffsetX:['float','graphics','阴影图像偏移X轴','阴影x轴偏移值,正数往右'],
    shadowOffsetY:['float','graphics','阴影图像偏移Y轴','阴影y轴偏移值,正数往下'],
    image_shadow_frames:['bool','graphics','阴影图像指定','true时阴影不随单位移动而改变方向.'],
    lock_shadow_rotation_with_main_turret:['bool','graphics','阴影锁定为主炮塔方向','将身体图像阴影锁定到主炮塔的方向'],
    total_frames:['int','graphics','图像帧数','默认值为1.将图像分割为指定分数,用于动画.第一帧编号为0'],
    default_frame:['int','graphics','默认帧','指定默认显示为第几帧,默认为0即第一帧'],
    frame_width:['int','graphics','图像宽度','设置单帧宽度,自动计算并覆盖总帧数.'],
    frame_height:['int','graphics','图像高度','默认为图像高度'],
    splastEffect:['bool','graphics','水波效果','在水上时创建水波效果.默认为false'],
    dustEffect:['bool','graphics','灰尘效果','在地面上产生灰尘效果.默认为false'],
    splastEffectReverse:['bool','graphics','逆向水波效果','填true时,在倒车时也能产生效果'],
    dustEffectReverse:['bool','graphics','逆向灰尘效果','填true时,在倒车时也能产生效果'],
    movementEffect:['effectRef','graphics','运动效果','自定义运动效果,可以是内置的或者自定义的.'],
    movementEffectReverse:['effectRef','graphics','逆向运动效果','自定义倒车效果.'],
    movementEffectRate:['float','graphics','运动效果频率','自定义效果产生频率,每隔多少帧一次.'],
    movementEffectReverseFlipEffects:['bool','graphics','逆向时反转运动效果','倒车时反转效果'],
    repairEffect:['effectRef','graphics','维修效果','自定义维修效果,可以是任何东西.替换构建时的默认效果'],
    repairEffectAtTarget:['effectRef','graphics','维修目标效果','维修目标上产生的效果.'],
    repairEffectRate:['float','graphics','维修效果频率','维修效果每隔多少帧产生一次.'],
    reclaimEffect:['effectRef','graphics','回收效果','自定义回收效果,可以是任何东西.替换回收时的默认效果'],
    reclaimEffectAtTarget:['effectRef','graphics','回收目标效果','回收目标上产生的效果.'],
    reclaimEffectRate:['float','graphics','回收效果频率','回收效果每隔多少帧产生一次.'],
    rotate_with_direction:['bool','graphics','随角度旋转','默认为true.设置为false时将单位图像锁定为0度.通常与animation_direction_ *一起用作多向视图.'],
    animation_direction_useMainTurret:['bool','graphics','多向动画使用主炮塔',''],
    animation_direction_units:['float','graphics','多向动画度数','每隔多少度切换一次素材,比如填45代表8个方向,90个代表4个方向的动画.与rotate_with_direction一起使用.'],
    animation_direction_strideX:['int','graphics','多向动画x向','动画帧取值在X方向改变时偏移.一般填0'],
    animation_direction_strideY:['int','graphics','多向动画y向','动画帧在方向改变Y轴偏移偏移.与frame_height一起使用.一般填1'],
    animation_direction_starting:['float','graphics','多向动画朝向','第一帧的方向,取决于你的素材.你要考虑转向后避免正负数交替现象,否则会导致素材朝向异常.'],
    disableLowHpFire:['bool','graphics','禁用低生命冒火','禁用低生命值时冒火的视觉效果'],
    disableLowHpSmoke:['bool','graphics','禁用低生命冒烟','禁用低生命值时冒烟的视觉效果'],
    showTransportBar:['bool','graphics','显示运输条','填true时显示运输条,false禁用.默认为true.'],
    showHealthBar:['bool','graphics','显示生命条','填true时显示生命条,false禁用.默认为true.'],
    showHealthBarChanges:['bool','graphics','显示生命条变动',''],
    showEnergyBar:['bool','graphics','显示能量条','填true时显示能量条,false禁用.默认为true.'],
    showShieldBar:['bool','graphics','显示护盾条','填true时显示护盾条,false禁用.默认为true.'],
    showQueueBar:['bool','graphics','显示队列条','填true时显示操作,生成的队列条,false禁用.默认为true.'],
    showShotDelayBar:['bool','graphics','显示开火后的冷却条','(默认为true) - 用于显示开火速度慢的炮塔的冷却指示条(译者注:原文calldown似乎有误,应为cooldown)']
},

attack:{
    maxAttackRange:['float','attack','攻击距离','最大攻击距离.(会乘以globalScale,但不建议使用globalScale)'],
    canAttack:['bool','attack','可以攻击','如果设置为false,则不能攻击任何单位.其他canAttack选项将无效.'],
    canAttackFlyingUnits:['logicBoolean','attack','可攻击空中单位','可以攻击空中单位,下面的攻击条件代码可于任意炮塔单独设置.'],
    canAttackLandUnits:['logicBoolean','attack','可攻击表面单位','可以攻击表面单位(包括陆地和水面)'],
    canAttackUnderwaterUnits:['logicBoolean','attack','可攻击水下单位','可以攻击水下单位'],
    canAttackNotTouchingWaterUnits:['logicBoolean','attack','可以攻击非接触水单位','可以攻击非接触水单位,默认为true.如果是false,则只能攻击与水接触的单位,不能攻击岸上.用于鱼雷逻辑.也可以根据炮塔需要设置.'],
    canOnlyAttackUnitsWithTags:['string','attack','只攻击带特定标签单位','只能攻击带特定标签的单位'],
    canOnlyAttackUnitsWithoutTags:['string','attack','不攻击带特定标签单位','不能攻击带特定标签的单位'],
    setMainTurretAs:['turretRef','attack','设置主炮塔','设置主炮塔,有些代码要锁定主炮塔,对其有用.'],
    turretMultiTargeting:['bool','attack','每个炮塔向不同目标射击','允许每个炮塔同时向不同的目标射击.如果使用turretlimitingAngle(限制角度)非常有用'],
    isMelee:['bool','attack','近战','近战单位.与低攻击范围配合使用(例如maxAttackRange:9)可使自身和目标半径添加到范围内,并影响AI.'],
    meleeEngangementDistance:['int','attack','近战索敌距离','使部队游猎,自动移动以攻击附近的敌方部队.近战默认为250,非近战默认为0(即使非近战也可以使用.)'],
    onlyIdle:['bool','attack','只在空闲时',''],
    turretRotateWithBody:['bool','attack','炮塔随主体旋转','炮塔随主体旋转.默认true'],
    attackMovement:['string','attack','攻击移动类型','移动攻击类型.填normal/bomber.能量耗尽时,轰炸机攻击运动将后退.可填moveaway,strafing但无效.'],
    dieOnAttack:['bool','attack','自杀攻击','攻击时自毁.'],
    removeOnAttack:['bool','attack','移除攻击','攻击时移除自身.'],
    isFixedFiring:['bool','attack','固定射击','必须将身体对准目标射击.通常会使得部队需要停下来才能瞄准和射击.比如火炮.'],
    aimOffsetSpread:['float','attack','瞄准偏移','将每次攻击时的偏移量乘以目标半径.默认为0.6.设为0则不偏移,对范围武器影响较大.'],
    stopTargetingAfterFiring:['bool','attack','自动停火','单位射击后停止瞄准.很少使用或需要.如用于你不希望胡乱攻击浪费弹药的单位.'],
    disablePassiveTargeting:['bool','attack','不能主动攻击','单位只攻击手动选择的目标.很少使用或需要.如用于自爆卡车守家,如果自动攻击敌人就太蠢了.'],
    showRangeUIGuide:['bool','attack','显示范围UI','显示攻击范围的白圈.默认true.'],
    shootDelayMultiplier:['float','attack','开火间隔乘数','默认为1.可以在setUnitStats动态改变'],
    shootDamageMultiplier:['float','attack','开火伤害乘数','默认为1.可以在setUnitStats动态改变'],
    turretSize:['float','attack','炮塔大小','设置所有炮塔大小.填数值,按像素计算,不决定素材大小,而是以此为半径的开火位置.'],
    turretTurnSpeed:['float','attack','炮塔转速','炮塔转速,单位是每帧旋转角度.'],
    shootDelay:['time','attack','攻击间隔','开火间隔,也可以在每个转塔上使用延迟']
},

turret:{
    x:['float','turret','x:','坐标X'],
    y:['float','turret','y:','坐标Y'],
    height:['float','turret','炮塔高度','(用于3d单位,实测链接的炮塔也会跟着改变高度)to help placement on 3d style units'],
    copyFrom:['turretRef','turret','复制数据自','复制指定炮塔的所有值,作为该炮塔的默认值.新写代码重复时则覆盖掉它.'],
    projectile:['projectileRef','turret','抛射体','使用此抛射体.默认为第一个抛射体.'],
    altProjectile:['projectileRef','turret','关联抛射体','当altProjectileCondition为true时,从此炮塔发射的抛射体.'],
    altProjectileCondition:['logicBoolean','turret','关联抛射体条件','用于altProjectile'],
    barrelX:['float','turret','炮抛射体x','默认值为0.控制抛射体生成的X轴位置.'],
    barrelY:['float','turret','炮抛射体y','默认为大0.注意:size和barrelY含义相同'],
    barrelHeight:['float','turret','炮抛射体高度','高度(用于3d).影响抛射体产生的高度.'],
    size:['float','turret','炮塔大小','控制炮塔中心与抛射体丸产生点之间的距离.'],
    turnSpeed:['float','turret','炮塔转速','炮塔最大转动速度.单位度每帧.'],
    turnSpeedAcceleration:['float','turret','炮塔旋转加速度','炮塔加速度,默认设置为禁用,并使用全转速度.'],
    turnSpeedDeceleration:['float','turret','炮塔旋转减速度','默认为turnSpeedAcceleration.将此值设置为高于转弯加速度可能会允许更快地命中目标'],
    idleDir:['float','turret','闲时角度','闲置时角度.'],
    idleDirReversing:['float','turret','闲时角度反转','允许闲置时角度反转.除非连接到另一个炮塔(否则连接的炮塔在反转时通常会旋转),否则默认为idleDir + 180.如重坦逆行时炮塔转向.'],
    shouldResetTurret:['bool','turret','空闲自动归位','默认为true. 填false时禁止炮塔自动归位.'],
    idleSweepAngle:['int','turret','空闲扫描角度','炮塔闲时扫描角度.这一系列用于设置炮塔闲置时候转圈警戒动作.'],
    idleSweepDelay:['float','turret','空闲扫描间隔','炮塔闲时扫描间隔,多久动一次.'],
    idleSweepSpeed:['float','turret','空闲扫描速度','炮塔闲时扫描转向的速度.'],
    idleSweepCondition:['logicBoolean','turret','空闲扫描条件','炮塔闲时扫描的条件,比如单位移动但没攻击时炮塔确实是闲置的,但这时可能不该旋转.'],
    idleSweepAddRandomDelay:['float','turret','空闲扫描随机延迟','炮塔闲时扫描的随机延迟'],
    idleSweepAddRandomAngle:['int','turret','空闲扫描随机角度','炮塔闲时扫描的随机角度'],
    attachedTo:['turretRef','turret','链接到','要连接的另一个炮塔的ID,将相对于它定位,并随其旋转.'],
    slave:['bool','turret','隶属','锁定此转塔的方向,并为附加的转塔发射冷却时间.常用于多炮管单位.'],
    isMainNanoTurret:['bool','turret','是主构建炮塔','默认为false.用于创建建筑物的炮塔.只能在一个炮塔上为true,并且canShoot设置为false.'],
    energyUsage:['float','turret','能量需求','发射武器所需的能量.与resourceUsage相同:energy = X'],
    resourceUsage:['resourceRef','turret','资源需求','可以使用资金/能源/生命/护盾/弹药等.如果不符合条件则停止攻击.credits/energy/hp/shield/ammo'],
    delay:['time','turret','开火间隔','设置攻击间隔,覆盖全局炮塔间隔数据.'],
    linkDelayWithTurret:['turretRef','turret','链接间隔','当另一炮塔开火时,该炮塔上的冷却延迟将被重置/删除'],
    warmup:['time','turret','预热','射击前延迟.需要准备多长时间才能攻击,可以制作出蓄力效果.'],
    warmupCallDownRate:['float','turret','预热下降速度','停止攻击后预热条下降速度'],
    warmupNoReset:['bool','turret','预热不重置','默认为false.射击后未重设真正的预热时.与warmupCallDownRate一起使用'],
    warmupShootDelayTransfer:['float','turret','开火间隔过渡','默认值为0,这是一个乘数,用于通过预热值减少下一次开火延迟.与warmupNoReset一起使用时,可以使攻击速度越来越快.'],
    barrelOffsetX_onOddShots:['float','turret','奇数射击时炮抛射体偏移','默认0.在奇数射击时横向偏移,用于简化双管单位制作.'],
    canShoot:['bool','turret','可以开火','可以开火,默认为true'],
    canAttackFlyingUnits:['logicBoolean','turret','可攻击空中单位','可以攻击空中单位,覆盖[attack]的设定.'],
    canAttackLandUnits:['logicBoolean','turret','可攻击表面单位','可以攻击表面单位(包括陆地和水面)'],
    canAttackUnderwaterUnits:['logicBoolean','turret','可攻击水下单位','可以攻击水下单位'],
    canAttackNotTouchingWaterUnits:['logicBoolean','turret','可以攻击非接触水单位','可以攻击非接触水单位,默认为true.如果是false,则只能攻击与水接触的单位,不能攻击岸上.用于鱼雷逻辑.也可以根据炮塔需要设置.'],
    canOnlyAttackUnitsWithTags:['string','turret','只攻击带特定标签单位','只能攻击带特定标签的单位'],
    canOnlyAttackUnitsWithoutTags:['string','turret','不攻击带特定标签单位','不能攻击带特定标签的单位'],
    canAttackCondition:['logicBoolean','turret','攻击条件','攻击需要满足条件.'],
    clearTurretTargetAfterFiring:['bool','turret','射击后重置炮塔目标','射击后重置炮塔目标.'],
    limitingRange:['float','turret','限制范围','限制此炮塔的最远攻击范围.不要将此代码应用到所有炮塔,如果需要则设置maxAttackRange.'],
    limitingAngle:['float','turret','限制角度','与idleDir配合.炮塔只能以+/-此角度进行攻击.'],
    limitingMinRange:['float','turret','最小距离','设置炮塔的最小攻击范围,不能攻击此范围内单位,也就是死角.'],
    canAttackMaxAngle:['float','turret','可攻击最大角度','设置炮塔的最大射击角度.如果单位在可攻击角度外则不会开火.默认值为5,不要设置得更低.可以设置为181,即不需要转向就可发射炮抛射体.'],
    interceptProjectiles_withTags:['string','turret','拦截抛射体需有标签','拦截具有此标签的抛射体,目前铁锈用于反核武器.'],
    interceptProjectiles_andTargetingGroundUnderDistance:['int','turret','拦截抛射体检索范围','守护的范围,只有当敌方攻击目标地点落在此圈子内时才考虑拦截.'],
    interceptProjectiles_andUnderDistance:['int','turret','拦截抛射体攻击范围','默认值为2000,当抛射体到达这个距离时才开始发射拦截.'],
    interceptProjectiles_andOverHeight:['int','turret','拦截抛射体高度','需要超过此高度才会拦截.默认值为0.'],
    interceptProjectile_removeTargetLifeOnly:['bool','turret','拦截抛射体移除目标存活时间','默认值为false,当为false时射抛射体移除.true时使被击中的抛射体爆炸或分裂.用于设定命中抛射体时是否执行分裂逻辑.'],
    laserDefenceEnergyUse:['float','turret','激光防御能量需求','炮塔启用激光防御拦截敌方抛射体.还应在core中设置energyMax.'],
    aimOffsetSpread:['float','turret','瞄准偏移','将每次攻击时的偏移量乘以目标半径.默认为0.6.设为0则不偏移,对范围武器影响较大.'],
    invisible:['logicBoolean','turret','隐藏炮塔图像','即不显示炮塔本身图像,但是攻击什么的还是可以.'],
    image:['file-image','turret','图像','使用自定义图片.覆盖单位的主炮塔图像'],
    image_applyTeamColors:['bool','turret','图像应用队伍颜色','炮塔图像使用队伍颜色.默认为false.'],
    image_drawOffsetX:['float','turret','图像绘制偏移x','炮塔图像在X轴偏移.'],
    image_drawOffsetY:['float','turret','图像绘制偏移y','炮塔图像在Y轴偏移.'],
    chargeEffectImage:['file-image','turret','充能效果图像','预热时的充能效果.默认是由小变大.'],
    warmupStartEffect:['effectRef','turret','预热效果','开火延迟时产生效果.'],
    shoot_sound:['string','turret','开火音效','开火音效,填声音文件.'],
    shoot_sound_vol:['float','turret','开火音效大小','播放声音大小.'],
    shoot_flame:['effectRef','turret','开火动画','开火动画,内置参考表末尾.Luke推荐为:small, large, smoke, shockwave(小,大,烟,冲击波).可以自定义.'],
    shoot_light:['color','turret','开火闪光','开火时闪光,16进制argb格式.#AARRGGBB,透明度,红,绿,蓝'],
    idleSpin:['float','turret','闲时转速','炮塔闲置时的旋转速度,单位度每帧.'],
    onShoot_playAnimation:['animationRef','turret','开火播放动画','开火后播放[Animation]中的自定义动画'],
    onShoot_freezeBodyMovementFor:['bool','turret','开火冻结移动','开火时冻结单位主体运动.'],
    onShoot_triggerActions:['actionRef','turret','开火触发行为','每次这个炮塔开火时触发这些动作'],
    unloadUpToXUnitsAndGiveAttackOrder:['int','turret','卸载单位并赋予攻击目标','在炮塔炮筒位置卸下X个单位,并让它们攻击炮塔指定的目标.'],
    recoilOffset:['float','turret','后坐力大小','开火后向前或向后推动炮塔,以产生后坐力.填像素.'],
    recoilOutTime:['float','turret','后坐力速度','开火后到达偏移位置的时间'],
    recoilReturnTime:['float','turret','后坐力恢复','开火后回到默认位置所需时间.'],
    showRangeUIGuide:['bool','turret','显示范围UI','显示攻击范围的白圈.默认true.'],
    yAxisScaling:['float','turret','Y轴缩放比例','多用于用于2.5D效果,也就是伪3D.']
},

projectile:{
    life:['int','projectile','存在时间','开火后炮抛射体在没命中时的存活时间,单位为帧.60为1s.多少合适取决于速度与射程.'],
    deflectionPower:['float','projectile','激光拦截耗能','默认值为1.此抛射体被激光防御摧毁所需的能量. -1为禁止拦截.(对特殊武器如火焰)'],
    explodeOnEndOfLife:['bool','projectile','寿终爆炸','默认为false.True则会在寿命终结时爆炸,并产生其命中时该有的效果.而不是直接消失.'],
    autoTargetingOnDeadTarget:['bool','projectile','自动切换目标','如果目标死亡则自动切换单位.填true时如果有代码"targetGround:true"炮抛射体将会追踪距离它最近的单位.如果没有"targetGround"时将会在单位死亡后再改变目标.'],
    autoTargetingOnDeadTargetRange:['int','projectile','自动切换目标检索范围','当旧目标死亡时选择新目标的范围'],
    autoTargetingOnDeadTargetLead:['float','projectile','自动切换目标预判','尝试新的目标时的预判'],
    unloadUpToXUnitsFromSource:['int','projectile','卸载单位至命中地','将指定个数单位卸载到抛射体爆炸位置.'],
    teleportSource:['bool','projectile','传送','将单位移动到抛射体爆炸的位置,用于传送自身.'],
    spawnUnit:['unit','projectile','产生单位','在抛射体丸爆炸位置产生这种单位'],
    convertHitToSourceTeam:['bool','projectile','命中时更改所属','将更改被命中的单位转换队伍为自身所属.'],
    tags:['string','projectile','标签','用于抛射体拦截功能.'],
    flameWeapon:['bool','projectile','火焰武器','命中时产生小火焰(仅用于装饰)'],
    spawnProjectilesOnEndOfLife:['projectileRef','projectile','在寿命结束时生成抛射体','填抛射体名.在寿命(life)结束时生成抛射体.生成抛射体逻辑具体参数参考后面生成抛射体大项.这简化了过去许多需要多炮塔(如贯穿攻击)或是生成辅助单位才能实现的操作.'],
    spawnProjectilesOnExplode:['projectileRef','projectile','在爆炸时生成抛射体','填抛射体名.只在爆炸时生成抛射体,如果耗光life则不会生成.'],
    spawnProjectilesOnCreate:['projectileRef','projectile','在创建时生成抛射体','填抛射体名.抛射体创建时生成抛射体.'],
    directDamage:['int','projectile','直接伤害','击中对目标单位造成伤害.不适用于targetGround:true.'],
    areaDamage:['int','projectile','范围伤害','范围伤害值,此区域内敌方单位都将受到损伤,默认向边缘递减.'],
    areaRadius:['float','projectile','范围半径','范围伤害区域大小,此区域内敌方单位都将受到损伤,默认向边缘递减.数值类型为像素,大小算法为半径,铁锈内地块一格长为20像素.'],
    areaDamageNoFalloff:['bool','projectile','范围伤害不衰减','默认false.为true时范围伤害不再向边缘递减.'],
    areaRadiusFromEdge:['bool','projectile','范围伤害从边缘计算','范围伤害将从单位的边缘计算,而不是默认的中心计算.主要用于攻击大型单位.'],
    areaExpandTime:['float','projectile','范围扩展时间','将区域伤害变为爆炸波向边缘扩散.效果如核抛射体.'],
    areaHitAirAndLandAtSameTime:['bool','projectile','范围武器同时攻击空中和地面','范围武器将同时打击空中和地面.'],
    areaHitUnderwaterAlways:['bool','projectile','范围武器可攻击深海','范围武器将可以打击深海单位如潜艇.'],
    areaIgnoreUnitsCloserThan:['int','projectile','范围伤害忽略区域','小于此范围的单位不会受到攻击影响.需要比areaRadius小,否则造不成伤害.'],
    buildingDamageMultiplier:['float','projectile','建筑伤害乘数','默认为1.对建筑物伤害乘上此数值,用于伤害修正.比如闪电对建筑物伤害低,火焰对建筑物伤害高.'],
    shieldDamageMultiplier:['float','projectile','护盾伤害乘数','默认为1.对护盾伤害乘数.如0对护盾不造成伤害,2对护盾造成双倍伤害'],
    shieldDefectionMultiplier:['float','projectile','护盾阻挡乘数','护盾阻挡乘数,填0则可无视护盾,同时对单位和盾造成伤害.'],
    hullDamageMultiplier:['float','projectile','护盾损伤乘数','可以用来制造只影响护盾的电磁脉冲武器.0忽略单位,只伤害护盾'],
    ignoreParentShootDamageMultiplier:['bool','projectile','忽略父单位射击伤害乘数','忽略父单位射击伤害乘数'],
    armourIgnoreAmount:['int','projectile','无视装甲数量','无视目标装甲数量并造成伤害.'],
    friendlyFire:['bool/string','projectile','友伤','范围武器有友伤,可以伤害自己单位.铁锈限制不能对盟友有伤害.负数友伤可以用于范围维修,如果修盟友则需要用中立单位实现.参数(false,true,only-ignoreEnemy)(假,真,忽略敌人的友伤)'],
    mutatorX_ifUnitWithTags:['float','projectile','修正需要标签','伤害修正所需标签,仅对携带标签单位有效.否则为原始伤害.'],
    mutatorX_ifUnitWithoutTags:['float','projectile','修正除此标签','伤害修正除此标签外有效.'],
    mutatorX_directDamageMultiplier:['float','projectile','修正直接伤害','伤害修正,直接伤害(directDamage)乘数.比如直接伤害100,这里填2,对目标就造成200伤害.'],
    mutatorX_areaDamageMultiplier:['float','projectile','修正范围伤害','伤害修正,范围伤害(areaDamage)乘数.比如直接伤害100,这里填2,对目标就造成200伤害.'],
    mutatorX_changedExplodeEffect:['effectRef','projectile','修正命中效果','如果此修正处于有效状态,则更改爆炸效果.'],
    mutatorX_addResourcesDirectHit:['resourceRef','projectile','修正直接添加资源','伤害修正,用于直接伤害(directDamage),给目标添加指定资源.用途如给目标资源后,目标检测自身资源然后禁止移动.'],
    mutatorX_addResourcesAreaHit:['resourceRef','projectile','修正区域添加资源','伤害修正,用于范围伤害(areaDamage),给目标添加指定资源.'],
    targetGround:['bool','projectile','目标为地面','抛射体瞄准并攻击目标所在的地面,而不是追踪目标.直接伤害(directDamage)将会失效,需要使用areaDamage和areaRadius.'],
    targetGround_includeTargetHeight:['float','projectile','目标为地面包括目标高度','区域影响AA武器'],
    targetGroundHeightOffset:['float','projectile','目标为地面高度偏移','在目标上方或下方射击.可能对分裂和落下的炮抛射体有用.'],
    speed:['float','projectile','速度','抛射体飞行速度,单位是每帧飞行像素.铁锈地块1格20像素,填1则每秒飞行3格.'],
    targetSpeed:['float','projectile','到达速度','加速到这个速度'],
    targetSpeedAcceleration:['float','projectile','加速度','加速度,控制targetSpeed的速度提升'],
    ballistic:['bool','projectile','抛射体道','抛射体道导抛射体效果,使抛射体先飞向空中并向下飞,而不是走直线.'],
    ballistic_delaymove_height:['float','projectile','抛射体道垂直飞行高度','抛射体道导抛射体发射初期效果,决定抛射体道一开始先升高多少,再斜向爬升到最高过度.'],
    ballistic_height:['float','projectile','抛射体道高度','抛射体道最终高度.'],
    targetGroundSpread:['float','projectile','目标为地面散布','填数值,用于目标为地面时随机造成偏差效果'],
    speedSpread:['float','projectile','速度散布','随机改变炮抛射体初始速度'],
    instant:['bool','projectile','瞬间命中','开火时立即击中目标,用于激光,闪电,波束.'],
    instantReuseLast:['bool','projectile','瞬间命中回收最后抛射体','用于激光和闪电.激光或闪电命中后还会存在一段时间,当此抛射体命中后,清除上一个抛射体效果.使得只有一个抛射体存在.如使用高频射速变成光束武器,而不是瞎眼叠加.'],
    instantReuseLast_alsoChangeTurretAim:['bool','projectile','命中回收抛射体且改变瞄准','使炮塔瞄准受到命中目标扫描效果的影响,对光束武器有用'],
    instantReuseLast_keepAreaDamageList:['bool','projectile','命中回收抛射体区域伤害列表','瞬间命中并回收最后的抛射体并且保持区域伤害列表,默认false,保持列表是1.13的正常行为,造成区域伤害不会第二次生效,但不是很有用.只有当你想要旧的行为时才使用这个.'],
    disableLeadTargeting:['bool','projectile','禁用预判','瞄准移动目标时,禁用预判计算.默认为false.'],
    leadTargetingSpeedCalculation:['float','projectile','预判计算','用于使用targetGround时预判计算.目标计算的预期速度.默认为“targetSpeed”.如果设置则基于speed.'],
    initialUnguidedSpeedHeight:['float','projectile','初始非制导垂直速度','设置抛射体和地面间的垂直速度,利用gravity制造出平滑的抛物线.比较迷,填1左右,重力可以不填.'],
    initialUnguidedSpeedX:['float','projectile','初非导引速度X','让抛射体以弧线形式移动,负数向左,正数向右.'],
    initialUnguidedSpeedY:['float','projectile','初非导引速度Y','修改抛射体的高度,正数向下,负数向上.'],
    gravity:['float','projectile','重力','控制地面的抛射体丸的拉力.与initialUnguidedSpeedHeight一起使用.'],
    trueGravity:['float','projectile','绝对向重力','炮弹在靠近单位时因为有该key会低空飞行一段距离,但注意不要填的太大,否则会直接往屏幕下方飞走.'],
    turnSpeed:['float','projectile','转弯速度','限制抛射体的转弯速度,更好的做出抛射体道效果.'],
    turnSpeedWhenNear:['bool','projectile','靠近时转弯速度','用于当射抛射体非常接近目标时,默认禁用转弯速度以使其能够命中.'],
    wobbleAmplitude:['float','projectile','摆动幅度','抛射体飞行中摆动的剧烈程度.'],
    wobbleFrequency:['time','projectile','摆动频率','抛射体飞行中摆动的频率.'],
    pushForce:['float','projectile','推动力量','抛射体丸所携带的“重量”,质量越大,推力越大.推动(或以负值拉动)被击中的单位.除以目标质量'],
    pushVelocity:['float','projectile','推进速度','抛射体爆炸后可用推动单位,推力相对于方向的速度,推动(或以负值拉动)被击中的单位.忽略目标质量'],
    moveWithParent:['bool','projectile','随父物体移动','当父单位移动时也移动抛射体.对光束效果武器很有用.'],
    sweepOffset:['float','projectile','扫描偏移','扫描偏移,用于制作类似于两栖护盾坦克的激光武器.对光束效果很有用.'],
    sweepSpeed:['float','projectile','扫描速度','扫描速度,用于制作类似于两栖护盾坦克的激光武器.对光束效果很有用.'],
    sweepOffsetFromTargetRadius:['float','projectile','扫描偏移目标半径','以目标半径作为扫描偏移量乘数,用于制作类似于两栖护盾坦克的激光武器.对光束效果很有用.'],
    retargetingInFlight:['bool','projectile','重新瞄准在飞行时','在飞行过程中重新瞄准一个新的目标,非常适合投掷式武器和相互碰撞的抛射体'],
    retargetingInFlightSearchDelay:['float/time','projectile','重新瞄准在飞行时搜索延迟','寻找新目标之间的时间.默认5'],
    retargetingInFlightSearchRange:['int','projectile','重新瞄准在飞行时搜索范围','重新选择目标的范围.默认值120'],
    retargetingInFlightSearchLead:['float','projectile','重新瞄准在飞行时预判','引导射抛射体试图击中目标.默认15'],
    retargetingInFlightSearchOnlyTags:['string','projectile','重新瞄准在飞行时针对标签','只针对具有这些标签的单位进行重定向.'],
    color:['color','projectile','颜色','使用十六进制值对该抛射体重新着色,它也决定了激光颜色,颜色格式为#AARRGGBB.'],
    teamColorRatio:['float','projectile','阵营色色相','将团队颜色混合到抛射体颜色中,填0-1.'],
    teamColorRatio_sourceRatio:['float','projectile','阵营色色相比例','将团队颜色混合到抛射体颜色中与原色比例,默认为(1-teamColorRatio)'],
    invisible:['bool','projectile','隐藏','隐藏抛射体图像.'],
    image:['file-image','projectile','图像','使用自定义图片.覆盖drawType和frame'],
    shadowFrame:['int','projectile','阴影帧',''],
    shadowImage:['file-image','projectile','阴影图像','使用自定义图片给抛射体加阴影.'],
    drawType:['int','projectile','绘制类型','使用内置抛射体图像. 0:projectiles.png 1:projectiles_large.png 2:projectiles2.png'],
    drawSize:['float','projectile','绘制大小','缩放抛射体大小.默认为1'],
    frame:['int','projectile','帧','使用的内置图像帧,编号从零开始.和drawType结合使用.'],
    hitSound:['bool','projectile','打击音效','启用命中音效,默认true'],
    explodeEffect:['effectRef','projectile','爆炸效果','抛射体爆炸效果'],
    explodeEffectOnShield:['effectRef','projectile','护盾上爆炸效果','如果目标上有护盾,则使用此效果'],
    drawUnderUnits:['bool','projectile','绘制与单位下','绘制于单位下方.'],
    effectOnCreate:['effectRef','projectile','创建时效果','创建时效果,会追随抛射体.'],
    shouldRevealFog:['bool','projectile','揭开迷雾','抛射体在爆炸时向玩家揭开迷雾.'],
    alwaysVisibleInFog:['bool','projectile','迷雾中显示','抛射体总是在迷雾中显示.'],
    nukeWeapon:['bool','projectile','核武器','发射时在迷你地图上显示.还有其他一些效果.'],
    trailEffect:['bool/effect','projectile','尾焰','设置为true时为默认的尾焰.但也可以指向任何自定义效果,或使用内置效果.'],
    trailEffectRate:['float','projectile','尾焰频率','尾焰产生频率,默认为3'],
    lightSize:['float','projectile','闪光大小','抛射体光照大小,单位半径是地块格子'],
    lightColor:['color','projectile','闪光颜色','抛射体光照颜色,不决定激光颜色,激光由color决定.'],
    lightCastOnGround:['bool','projectile','闪光映射到地面','将闪光效果映射到地面,如火炮的光和抛射体是分离的.'],
    largeHitEffect:['bool','projectile','大的打击效果','为true时会产生大的爆炸效果和声音(仅用于装饰),设为false时会禁用范围武器的冲击波效果.'],
    lightingEffect:['bool','projectile','闪电效果','将抛射体图像修改为闪电,一般需要instant(瞬间命中)搭配.'],
    laserEffect:['bool','projectile','激光效果','将抛射体图像修改为激光.'],
    delayedStartTimer:['time','projectile','延迟时间','抛射体发射延迟时间.'],
    beamImage:['file-image','projectile','波束图像','用于激光效果的主体图像,图像会被复制为多份显示.例如可用于做红警中的正弦波状辐射武器.因为本质是图像拼接,所以长度限制不能小于20'],
    beamImageOffsetRate:['float','projectile','波束偏移频率','波束图像的移动频率.'],
    beamImageStart:['file-image','projectile','波束开始图像','光束动画开火端效果图像'],
    beamImageEnd:['file-image','projectile','波束命中图像','光束动画命中端效果图像'],
    beamImageStartRotated:['bool','projectile','波束始端旋转','光束动画开火端效果图像是否以炮塔角度旋转旋转,默认false,不旋转.'],
    beamImageEndRotated:['bool','projectile','波束末端旋转','光束动画命中端效果图像是否旋转,默认false.']
},

movement:{
    movementType:['other','movement','运动类型','定义单位将能够通过的地形以及与单位类型相关的其他属性.类型:LAND,BUILDING,AIR,WATER,HOVER,OVER_CLIFF,OVER_CLIFF_WATER'],
    moveSpeed:['float','movement','移动速度','单位的最大移动速度.'],
    moveAccelerationSpeed:['float','movement','加速度','定义单位加速到最大速度的加速度.'],
    moveDecelerationSpeed:['float','movement','减速度','与加速度相对应得减速度.不要设的太小.'],
    reverseSpeedPercentage:['float','movement','倒车速度比率','0.6默认值.超过0.4会在短距离(以40％的速度)时反转. 如果设置为1前进后退则不转弯. 填0时禁止倒退,必须旋转.'],
    landOnGround:['other','movement','降落到地面','闲置时使飞行器降落.'],
    targetHeight:['float','movement','到达高度','默认为0,但如果运动类型为空军则默认为35.'],
    targetHeightDrift:['float','movement','高度浮动','默认0,空军1.5.单位高度上下浮动高度.'],
    startingHeightOffset:['float','movement','创建时高度偏移','单位在创建时高度.负数上升比较慢.'],
    maxTurnSpeed:['float','movement','转弯速度','最大转弯速度.'],
    turnAcceleration:['float','movement','转弯加速度','转弯加速度.'],
    moveSlidingMode:['bool','movement','移动后滑动','移动后滑动,相当于惯性.和单位的速度,加速度,转弯速度有关.True时受推力影响'],
    moveIgnoringBody:['bool','movement','移动忽略转向','true效果即不必转弯便能运动,false效果即原地转弯完成才能运动'],
    moveSlidingDir:['int','movement','移动滑动角度','移动滑动角度.无明显效果.'],
    joinsGroupFormations:['bool','movement','加入队形','将单位组成小队.铁锈调集大量部队时将其组成方阵以降低运算压力,但队形可能影响速度或浪费时间.禁用后则不参与组队.'],
    ignoreMoveOrders:['bool','movement','忽略移动指令','忽略移动指令,此代码强制要求移动速度为0,适用例子:红警中单位部署忽略移动指令.'],
    moveYAxisScaling:['float','movement','Y轴速度比例','垂直方向单位移动速度乘数,适用于2.5D,也就是用铁锈模拟3D.典型如红警.'],
    slowDeathFall:['bool','movement','死亡缓慢降落','为"true"时,被击毁时降落速度减慢,并且向前滑行一段距离.注意,必须设置死亡图像,不然坠落后会显示生前图像,而不是直接炸掉.'],
    heightChangeRate:['float','movement','高度改变速率','单位改变高度的频率,无论是转换还是浮动'],
    fallingAcceleration:['float','movement','降落加速度','单位降落时的加速度'],
    fallingAccelerationDead:['float','movement','坠毁加速度','单位被摧毁时降落的加速度']
},

ai:{
    useAsBuilder:['bool','ai','用作建造者','作为建造者.如果单位可以建造或维修建筑物,则设置为true. 默认为[core] isBuilder.'],
    useAsTransport:['bool','ai','用作运输','作为载具.如果单位可以运输单位,则默认为true.如果你的单位可以运输又能攻击,则AI可能囤积起来而不攻击,则需要设置false.'],
    useAsAttacker:['bool','ai','用作攻击者','是否作为攻击者.'],
    useAsHarvester:['bool','ai','用作采集','作为采集者.如果单位可以回收资源,则默认为true'],
    disableUse:['bool','ai','禁用','禁止AI建立这个单位或建筑物'],
    ai_upgradePriority:['float','ai','AI升级优先级','升级优先级.默认值为0.06. 设置在0-1之间,越高,表示AI更有可能先于其他升级该单位.'],
    buildPriority:['float','ai','建造优先级','建造优先级,填0-1. 越大越AI越可能造.Luke的的第一座土地工厂使用0.8,空中工厂使用0.48,第一炮塔使用0.47.'],
    noneInBaseExtraPriority:['float','ai','基地内没有时优先级','如果AI基地中不存在此单位,则增加其优先级.'],
    noneGlobalExtraPriority:['float','ai','全图没有时优先级','如果此单位在地图上的任何位置都不存在,则增加其优先级.'],
    nonInBaseExtraPriority:['float','ai','基地内没有时的优先级','如果AI基地中不存在此单位,则增加其优先级.'],
    nonGlobalExtraPriority:['float','ai','全图没有时的优先级','如果此单位在地图上的任何位置都不存在,则增加其优先级.'],
    recommendedInEachBaseNum:['int','ai','推荐在每个基地的数量','推荐在每个基地中的数量.'],
    recommendedInEachBasePriorityIfUnmet:['float','ai','推荐条件不满足时优先级','如果未满足,推荐在基地中的优先级.'],
    upgradedFrom:['string','ai','升级自','创建到另一个单位的链接,用于保留同一单位已升级和未升级的计数.'],
    maxGlobal:['int','ai','全图最大数量','全图最多拥有的数量.'],
    maxEachBase:['int','ai','每个基地最大数量','每个基地最多拥有的数量.'],
    notPassivelyTargetedByOtherUnits:['bool','ai','不被动地被其他单位瞄准','允许更好的墙壁建筑物,默认情况下,这些建筑物不会瞄准目标.用于围墙'],
    lowPriorityTargetForOtherUnits:['bool','ai','低优先级目标','其它单位不优先考虑此单位.用于围墙'],
    aiTags:['string','ai','ai标签','采集'],
    whenUsingAsHarvester_recommendedInEachBase:['int','ai','每个基地此采集者数量','当此单位用作采集者时,每个基地推荐的采集者数量.'],
    whenUsingAsHarvester_recommendedGlobal:['int','ai','全地图推荐采集者数量','当此单位用作采集者时,全图推荐的采集者数量.'],
    whenUsingAsHarvester_includeOtherHarvesterCounts:['bool','ai','是否算在采集者计数中','当此单位用作采集者时,是否算在其它采集者统计中.'],
    onlyUseAsHarvester_ifBaseHasUnitTagged:['string','ai','有此标签才作为采集者','只有当基地有单位标记时才可以作为采集者使用.']
},

leg:{
    x:['float','leg/arm','x:','设置脚在X轴上的位置.'],
    y:['float','leg/arm','y:','设置脚在Y轴上的位置.'],
    copyFrom:['int','leg/arm','复制与','从另一条腿复制.仅需设置一次腿部值时有用'],
    attach_x:['float','leg/arm','x轴链接位置','在X轴上设置腿部的附着点.'],
    attach_y:['float','leg/arm','Y轴链接位置','在Y轴上设置腿部的附着点.'],
    rotateSpeed:['float','leg/arm','旋转速度','设置脚旋转速度,非对称情况下很明显.'],
    endDirOffset:['int','leg/arm','末端角度偏移值','目标脚/末端相对于身体的旋转角度.'],
    lockMovement:['bool','leg/arm','锁定运动','禁止使用腿脚,将其锁定到主体.用于将行走单位转换为飞行单.'],
    heightSpeed:['float','leg/arm','高度速度','移动时脚抬高速度和高度.'],
    moveSpeed:['float','leg/arm','移动速度','腿脚移动速度.'],
    moveWarmUp:['time','leg/arm','移动延迟','腿脚移动延迟'],
    holdDisMin:['float','leg/arm','最小移动距离','默认值为7.如果相邻的腿还没有重新移动,则至少移动此距离.'],
    holdDisMax:['float','leg/arm','最大移动距离','默认值为16.如果已经移动超过此距离则强制重新放置腿.'],
    holdDisMin_maxMovingLegs:['int','leg/arm','最大移动腿数目','最多移动腿数目'],
    hold_moveOnlyIfFurthest:['bool','leg/arm','只在最远时保持移动','保持移动仅在最远时候.'],
    holdDisMin_checkNeighbours:['bool','leg/arm','最小移动距离检查相邻','移动最小距离时检查相邻的腿脚.'],
    hardLimit:['float','leg/arm','硬性限制','默认值为50.强制腿部不要走的超过此数值.最好不要用到.'],
    estimatingPositionMultiplier:['float','leg/arm','预测位置乘数','默认值为1.根据单位速度预测单位可用的腿脚放置位置.'],
    hidden:['logicBoolean','leg/arm','隐藏','隐藏'],
    image_end:['file-image','leg/arm','末端图像','末端图像,相当于脚.'],
    image_end_shadow:['file-image','leg/arm','末端图像阴影','末端图像阴影.'],
    image_end_teamColors:['bool','leg/arm','末端图像着色','末端图像使用阵营色.'],
    image_foot:['file-image','leg/arm','脚图像','脚图像,与image_end相同'],
    image_foot_shadow:['file-image','leg/arm','脚图像阴影','脚图像阴影.'],
    image_middle:['file-image','leg/arm','中部图像','中部图像,相当于腿.'],
    image_leg:['file-image','leg/arm','腿图像','腿图像,与image_middle相同'],
    liftingHeightOffset:['float','leg/arm','离开高度偏移','离开时的脚的高度'],
    targetHeight:['float','leg/arm','目标高度','最终高度'],
    targetHeightRelative:['float','leg/arm','相对目标高度','相对自身的最终高度'],
    image_middle_teamColors:['bool','leg/arm','腿图像阵营色','给腿也用上队伍色'],
    draw_foot_on_top:['bool','leg/arm','绘制脚在顶层','绘制脚在顶层.'],
    drawOverBody:['bool','leg/arm','绘制主体之上','绘制在主体之上.'],
    drawUnderAllUnits:['bool','leg/arm','绘制所有单位之下','绘制所有单位之下.'],
    drawDirOffset:['float','leg/arm','绘制角度偏移','绘制角度偏移.'],
    dust_effect:['bool','leg/arm','灰尘效果','脚落地时产生灰尘.'],
    spinRate:['float','leg/arm','自身自动旋转速度','使手臂/腿脚一直旋转,像转塔的idleSpin.用处如直升机的螺旋桨.'],
    favourOppositeSideNeighbours:['bool','leg/arm','偏向于临近一侧','填true时,使得左右的腿脚拉开时间差,这样更好看.否则看起来顺拐.计算相邻的X比接近的Y查10倍时间.'],
    drawLegWhenZoomedOut:['bool','leg/arm','缩小时绘制腿','在缩小显示倍数(看到东西更多)后绘制腿.False时不绘制.为了提高绘制腿性能,默认值根据单位大小而变化.'],
    drawFootWhenZoomedOut:['bool','leg/arm','缩小时绘制脚','在缩小显示倍数(看到东西更多)后绘制脚.False时不绘制.为了提高绘制腿性能,默认值根据单位大小而变化.如果单独设置阴影则可能比较怪异.'],
    explodeOnDeath:['bool','leg/arm','死亡时爆炸',''],
    resetAngle:['float','leg/arm','复位角度','复位角度.']
},

attachment:{
    x:['float','attachment','x','子单位x轴位置'],
    y:['float','attachment','y','子单位Y轴位置'],
    height:['float','attachment','高度','子单位高度.'],
    lockDir:['bool','attachment','锁定角度',''],
    idleDir:['int','attachment','闲置方向','闲置时角度.'],
    idleDirReversing:['float','attachment','闲置方向反转','允许朝向反转,比如重坦倒退移动时炮塔反转,而不需要整个单位转向.'],
    isVisible:['bool','attachment','是可见','是可见的.'],
    onCreateSpawnUnitOf:['units','attachment','创建时生成单位','此创造时也产生此子单位.'],
    canBeAttackedAndDamaged:['bool','attachment','可被攻击或损坏','可以被攻击或受到伤害.'],
    isUnselectable:['bool','attachment','不可选择','是不可选择的.'],
    isUnselectableAsTarget:['bool','attachment','禁止选择和作为目标','默认效果为isUnselectable.可以用来创造不能被选择但是可以被攻击,回收的单位'],
    lockLegMovement:['bool','attachment','锁定腿脚运动','锁定腿脚防止乱动.'],
    freezeLegMovement:['bool','attachment','冻结腿脚运动',''],
    showMiniHp:['bool','attachment','显示迷你血条','指附属单位下面那个又小又细的血条栏'],
    hideHp:['bool','attachment','隐藏血量',''],
    hidden:['bool','attachment','隐藏',''],
    keepAliveWhenParentDies:['bool','attachment','保持子存活','当此单位死亡时,子单位保持存活.'],
    setDrawLayerOnTop:['bool','attachment','绘制于顶层','此子单位绘制于顶层.'],
    setDrawLayerOnBottom:['bool','attachment','绘制于底层','此子单位绘制于底层.'],
    addTransportedUnits:['bool','attachment','增加被运输单位','添加到运输单位槽中.'],
    lockRotation:['bool','attachment','锁定旋转','锁定方向,禁止旋转.'],
    rotateWithParent:['bool','attachment','子单位一同旋转','旋转时子单位是否一同旋转.'],
    resetRotationWhenNotAttacking:['bool','attachment','不攻击时重置角度','不攻击时恢复到自身默认角度'],
    deattachIfWantingToMove:['bool','attachment','移动时脱离','若收到移动命令,子单位将自动分离.这包括来自action的路径点.可以用来制作机场.'],
    unloadInCurrentPosition:['bool','attachment','卸载于此位置',''],
    prioritizeParentsMainTarget:['bool','attachment','优先考虑父单位的主要目标','子单位优先考虑父单位当前的目标.'],
    alwaysAllowedToAttackParentsMainTarget:['bool','attachment','总是攻击父单位的主要目标','子单总是跟随攻击父单位的主要目标.'],
    onlyAttackParentsMainTarget:['bool','attachment','只攻击父单位的主要目标',''],
    canAttack:['bool','attachment','可攻击','默认值为true.设置为false以阻止子单位自动攻击.'],
    onParentTeamChangeKeepCurrentTeam:['bool','attachment','改变队伍时子单位保持原队伍','默认值为false.如果为true则父单位改变队伍时子单位不改变队伍.'],
    smoothlyBlendPositionWhenExistingUnitAdded:['bool','attachment','补充时平滑移动','补充所装载单位至槽位时平滑移动.'],
    keepWaypointsNeedingMovement:['bool','attachment','保持需要移动路径点','默认值为false.当为false时,队列中任何需要移动才能完成的队列路径点都会被移除.'],
    showAllActionsFrom:['logicBoolean','attachment','显示所有操作来源','当被选中时,在父单元列表中显示所有附加单位的动作'],
    createIncompleteIfParentIs:['bool','attachment','创建随父单位','如果父节单位不完整,则创建子单位不完整'],
    onConvertKeepExistingUnitInSameSlot:['bool','attachment','转换时附属仍然在同一槽位中',''],
    redirectDamageToParent:['bool','attachment','重定向伤害到父单位','将对附属造成的伤害重定向到父单位,而不是伤害子单位自身.'],
    redirectDamageToParent_shieldOnly:['bool','attachment','重定向伤害到父单位护盾','只将对附属造成的伤害重定向到父单位的护盾,而不是伤害子单位自身.如果盾没了那就伤害自身,如模块蜘蛛.']
},

effect:{
    life:['float','effect','效果存在时间','默认值为200.到时间效果消失. 设置得尽可能低以减少效果开销.'],
    lifeRandom:['float','effect','效果存在时间随机值','效果存在时间的随机范围.'],
    alsoEmitEffectsOnDeath:['effectRef','effect','死亡时创建效果','在生命耗尽的时候创造这些效果.'],
    alsoEmitEffects:['effectRef','effect','也创造效果','创建时创建更多效果,对于多效果很有用. 注意:创建的效果上的其他“ alsoEmitEffects”将被忽略,禁止套娃.'],
    ifSpawnFailsEmitEffects:['effectRef','effect','如果失败则创建效果','如果此效果的“spawnChance”失败,则产生这些效果.'],
    alsoPlaySound:['file-sound','effect','也播放音效','播放音效,填文件名或内置.'],
    createWhenOffscreen:['bool','effect','可创建于画面之外','允许在画面之外产生此效果,默认为false.'],
    createWhenZoomedOut:['bool','effect','缩小时可产生效果','允许缩小时产生此效果,默认值为true'],
    createWhenOverLiquid:['bool','effect','创建于液体上','允许在液体上方产生此效果,默认值为true'],
    createWhenOverLand:['bool','effect','创建于陆地上','允许在陆地上方产生此效果,默认值为true'],
    spawnChance:['float','effect','产生几率','默认值1.如果小于1,则效果随机被创建'],
    showInFog:['bool','effect','在雾中显示','默认为false'],
    delayedStartTimer:['time','effect','延迟创建','等待这么久再播放此动画,单位为帧.'],
    delayedStartTimerRandom:['float','effect','延迟创建随机时间','等待时间随机变化'],
    liveAfterAttachedDies:['bool','effect','目标死后存活','目标死后动画继续存活,使用AttachedToUnit时默认为false.'],
    priority:['string','effect','优先级','默认为高,一次显示太多效果时依据重要程度丢弃不重要的以用于创建新的.verylow/low/high/veryhigh/critical(很低,低,高,很高,至关重要)'],
    attachedToUnit:['bool','effect','附着在单位上','此效果产生时吸附到目标单位或抛射体.将与之一起移动.'],
    alwayStartDirAtZero:['bool','effect','初始角度总是为零','忽略附属单位或者产者的角度.'],
    atmospheric:['bool','effect','空气效果','添加阻力使此效果减慢速度,并添加随机移动.用于模拟尾焰.'],
    physics:['bool','effect','物理效果','撞击地面时反抛射体.需要高度才能生效.'],
    physicsGravity:['float','effect','物理重力','默认为1.physics:true时的垂直方向加速度.'],
    xOffsetRelative:['float','effect','X相对偏移量','效果起始时相对于炮塔,炮抛射体,单位的偏移的方向位置.正数向右,负数向左.'],
    yOffsetRelative:['float','effect','Y相对偏移量','效果起始时相对于炮塔,炮抛射体,单位的偏移的方向位置.正数向前,负数向后.'],
    xOffsetRelativeRandom:['float','effect','X相对随机偏移量','X相对目标随机偏移量.随机增加或减少此值,用于偏移像素.'],
    yOffsetRelativeRandom:['float','effect','Y相对随机偏移量','Y相对目标随机偏移量.随机增加或减少此值,用于偏移像素.'],
    xOffsetAbsolute:['float','effect','X绝对偏移量','Absolute类为绝对偏移,它不像Relative那样考虑单位的方向.比如设置x向速度为1,绝对偏移则始终向右移动,相对偏移可以向任意方向移动.'],
    yOffsetAbsolute:['float','effect','Y绝对偏移量','按位置偏移起动效果,忽略附加炮塔单位等的方向.'],
    xOffsetAbsoluteRandom:['float','effect','X绝对随机偏移量','随机增加或减少此值,用于偏移像素.'],
    yOffsetAbsoluteRandom:['float','effect','Y绝对随机偏移量','随机增加或减少此值,用于偏移像素.'],
    xSpeedRelative:['float','effect','X相对速度','X轴相对于目标的移动速度.,正数向右,负数向左.'],
    ySpeedRelative:['float','effect','Y相对速度','Y轴相对于目标的移动速度.正数向前,负数向后.'],
    xSpeedRelativeRandom:['float','effect','X随机相对速度','随机增加或减少此值,用于偏移像素.'],
    ySpeedRelativeRandom:['float','effect','Y随机相对速度','随机增加或减少此值,用于偏移像素.'],
    xSpeedAbsolute:['float','effect','X绝对速度','X轴相对于起点的绝对移动速度.'],
    ySpeedAbsolute:['float','effect','Y绝对速度','Y轴相对于起点的绝对移动速度.'],
    xSpeedAbsoluteRandom:['float','effect','X随机绝对速度','按此值随机更改初始值.'],
    ySpeedAbsoluteRandom:['float','effect','Y随机绝对速度','按此值随机更改初始值.'],
    hOffset:['float','effect','高度偏移','距目标的高度偏移.正数向上,负数向下.'],
    hOffsetRandom:['float','effect','随机高度偏移','按此值随机更改初始值.'],
    hSpeed:['float','effect','高度速度','高度移动速度.正数向上,负数向下.'],
    hSpeedRandom:['float','effect','随机高度速度偏移','按此值随机更改初始值.'],
    dirOffset:['float','effect','角度偏移','角度偏移,修改初始朝向.注意,0度可能存在朝向问题.'],
    dirOffsetRandom:['float','effect','随机角度偏移量','按此值随机更改偏移角度.'],
    dirSpeed:['float','effect','转速','修改效果的旋转速度.'],
    dirSpeedRandom:['float','effect','随机转速','按此值随机更改旋转速度.'],
    pivotOffset:['float','effect','枢轴偏移','整个效果的朝向偏移'],
    pivotOffsetRandom:['float','effect','枢轴偏移随机','按此值随机更改朝向.'],
    frameIndex:['int','effect','帧索引','使用内置效果时所取用的帧编号,0取第一帧.'],
    frameIndexRandom:['int','effect','帧随机','随机增减索引值,用于随机使用同组内不同的图像.'],
    stripIndex:['int/string','effect','图像集','要使用的内置图像集.不能与自定义图像一起使用.如effects 效果1对应res内文件effects.png,以此类推.'],
    image:['file-image','effect','图像','要使用的自定义图像文件.不能与stripIndex一起使用.'],
    imageShadow:['file-image','effect','阴影图像','用于自定义阴影的图像'],
    scaleTo:['float','effect','结束缩放倍数','效果结束时缩放倍数.'],
    scaleFrom:['float','effect','初始缩放倍数','效果初始时缩放倍数,用于效果从小到大缩放,或者反向缩放.'],
    color:['color','effect','颜色','填16进制颜色值,给图像上叠加颜色.一般建议图像使用灰度图,然后叠加颜色.注意彩色图是无法叠加白色变白的.'],
    teamColorRatio:['float','effect','队伍色相','填0-1在图像上叠加阵营色,1为完全为阵营色.'],
    drawType:['string','effect','绘制类型','效果的绘制类型'],
    drawUnderUnits:['bool','effect','绘制在单位下方','将此效果绘制在单位下方.'],
    fadeInTime:['float','effect','淡入时间','设置淡入效果时间,从透明到不透明.透明度值从0%到100%.'],
    fadeOut:['bool','effect','淡出','设置淡入效果时间,透明度从100%淡出到%0.把alpha设置为高于1可以延长淡出.'],
    alpha:['float','effect','透明度','介于0-1之间.可以设置为大于1以延迟淡出效果'],
    trailEffect:['effectRef','effect','尾焰效果','类似于炮抛射体的尾焰'],
    trailEffectRate:['float','effect','尾焰效果频率','产生频率'],
    shadow:['bool','effect','阴影','true时绘制阴影.如果使用imageShadow则强制为true'],
    frame_width:['int','effect','单帧宽度','规定单帧的宽度像素,如果值小于图像本体宽度则选取帧时采用换列方式进行处理.'],
    frame_height:['int','effect','单帧高度','规定单帧的高度像素,如果值小于图像本体高度则选取帧时采用换行方式进行处理.'],
    total_frames:['int','effect','动画总帧数','动画的总帧数,与图像(image)或frameIndex一起使用.'],
    animateFrameStart:['int','effect','动画开始帧','动画从哪一帧开始,第一帧编号为0'],
    animateFrameEnd:['int','effect','动画结束帧','动画在哪一帧结束.'],
    animateFramePingPong:['bool','effect','动画帧重放','动画正序播放完毕后再倒序播放一次.'],
    animateFrameSpeed:['time','effect','动画帧速度','动画播放速度,单位位游戏帧,一般动画帧数也不高,所以设置一般为0.x'],
    animateFrameSpeedRandom:['time','effect','动画帧随机速度','按此值随机更改动画速度.'],
    animateFrameLooping:['bool','effect','动画帧循环','默认false.当为false时,效果被移除时,动画结束'],
    animateFrameStartRandomAdd:['float','effect','动画帧随机开始添加','以动画起始帧为基准,按照+/-所填数字内随机选取数字进行帧随机偏移']
},

animation:{
    onActions:['string','animation','动画条件','可用的动画触发的状态有:move, attack, idle, underConstruction, underConstructionWithLinkedBuiltTime, queuedUnits,Unknown, repair, reclaim, created'],
    onActionsQueuedUnitPlayAt:['float','animation','在队列中有单位播放','当使用onAction:queueedUnits时,动画开始之前需要达到值,设置为0-1之间'],
    blendIn:['time','animation','融入时间','与上一个动画融合时间.'],
    blendOut:['time','animation','切换融合','与下一个动画融合时间.'],
    pingPong:['bool','animation','缩放效果','结束后反向播放动画,它一般用来做生物的呼吸效果.'],
    playbackRate:['float','animation','重复播放频率',''],
    KeyframeTimeScale:['float','animation','帧时长缩放','缩放所有关键帧时间,这有助于在不更改所有内容的情况下更快/更慢地制作动画'],
    'armX_Xs':['other','animation','动画结束',''],
    'legX_Xs':['other','animation','动画X轴缩放',''],
    'body_Xs':['other','animation','胳膊关键帧','添加一个关键帧.用来创建多个动作的动画.'],
    'effect_Xs':['other','animation','腿关键帧','添加一个关键帧.用来创建多个动作的动画.'],
    'turretX_Xs':['other','animation','主体关键帧','随时为主体添加关键帧.身体仅允许使用frame和scale'],
    direction_units:['float','animation','效果关键帧','在播放动画时产生效果'],
    direction_strideX:['int','animation','炮塔关键帧','添加一个关键帧.用来创建多个动作的动画.'],
    direction_strideY:['int','animation','多向动画度数','播放此动画时,覆盖[graphics] animation_direction_units.多向动画度数	45个代表8个方向,90个代表4个方向的动画.'],
    direction_starting:['float','animation','多向动画x向','覆盖[graphics] animation_direction_strideX,动画帧取值在方向改变时偏移.一般填0']
},

action:{
    text:['file-text','action/hiddenAction','文本','界面中显示的文字'],
    textPostFix:['file-text','action/hiddenAction','文本动态更改','显示为后缀的文本,与textAddUnitName一起用于创建文本UI'],
    'text_language':['file-text','action/hiddenAction','文字多语言','界面中显示的文字,多语言'],
    description:['file-text','action/hiddenAction','描述','选中时显示的文本,用于解释其用途.'],
    'description_language':['file-text','action/hiddenAction','描述','描述多语言.'],
    displayType:['string','action/hiddenAction','显示类型','可用的行动的显示类型有:none, rally, upgrade, queueUnit, building, action, infoOnly, infoOnlyNoBox, infoOnlyStockpile'],
    displayRemainingStockpile:['bool','action/hiddenAction','显示剩余库存','显示剩余库存,显示为根据资源计算可以触发操作的次数.'],
    pos:['float','action/hiddenAction','位置','此动作在用户界面排序.'],
    iconImage:['file-image','action/hiddenAction','图标','使用图像作为此动作图标.'],
    iconExtraImage:['file-image','action/hiddenAction','额外图标图像','使用图像作为此动作图标.和上一个一致,但显示更靠上.绘制在图标图像上方.对升级图标等有用'],
    iconExtraColor:['color','action/hiddenAction','额外图标颜色','将图标叠加上额外的颜色.默认为#64FFFFFF'],
    iconExtraIsVisible:['logicBoolean','action/hiddenAction','额外图标显示条件','设置图标什么时候可显示.'],
    unitShownInUI:['unitRef','action/hiddenAction','UI中显示的单位','使用此单位作为动作图标.'],
    setBuilt:['float','action/hiddenAction','设置完成度','默认为1.填0-1之间的数字,将指定单位建造完成度.比如填0.5,执行完操作后单位自身建造完成度就成了50%'],
    guiBuildUnit:['unit','action/hiddenAction','界面显示单位','将action图标和鼠标指针改为指定单位,这就像你用建造者去造建筑,会受地形影响,可为action或路径点提供坐标.'],
    tags:['string','action/hiddenAction','标签','可与queueSize(withActionTag=x)和queueItemAdded(withActionTag=x)结合使用'],
    textAddUnitName:['unitRef/unit','action/hiddenAction','从单元添加名称','从指定单位添加名称.'],
    descriptionAddFromUnit:['unitRef/unit','action/hiddenAction','从单元添加描述','从指定单位添加单位描述.'],
    descriptionAddUnitStats:['unitRef/unit','action/hiddenAction','从单元添加属性','从指定单位添加详细信息描述,比如攻击力,攻击范围.'],
    unitShownInUIWithHpBar:['bool','action/hiddenAction','单元在UI显示Hp条','在ui中显示单位血条.默认true,仅当unitShownInUI是unitRef时使用'],
    unitShownInUIWithProgressBar:['bool','action/hiddenAction','单元在UI显示进度条','在ui中显示单位进度条.默认true,仅当unitShownInUI是unitRef时使用.如果激活,则替换HP bar'],
    price:['int(price)','action/hiddenAction','价格','此行为需要的价格,可以是多种资源或自定义资源.如果不满足则行为不可用.如果没设定资源类型则默认为资金.如果价格为0,AI可能很少甚至不会使用.'],
    isActive:['logicBoolean','action/hiddenAction','可用','默认为true.如果为false,则会禁用操作,并在用户界面中以红色显示.'],
    isVisible:['logicBoolean','action/hiddenAction','可见','默认为true.如果false则从UI中隐藏并被禁用.'],
    isLocked:['logicBoolean','action/hiddenAction','锁定','默认为false.如果true则禁用操作,则会显示一个锁定文本.可用作禁核或者科技树,或是条件限制.'],
    isLockedMessage:['image-text','action/hiddenAction','锁定消息','显示锁定的原因.'],
    isLockedAlt:['logicBoolean','action/hiddenAction','更多锁定','另一个原因被锁定.用于显示不同的消息.'],
    isLockedAltMessage:['image-text','action/hiddenAction','更多锁定消息','显示更多锁定的原因.'],
    isLockedAlt2:['logicBoolean','action/hiddenAction','更多锁定2','另一个原因被锁定.用于显示更多锁定的原因.'],
    isLockedAlt2Message:['image-text','action/hiddenAction','更多锁定消息2','显示更多锁定的原因.'],
    allowMultipleInQueue:['bool','action/hiddenAction','允许多个队列','允许多次点击此行为形成队列,false时则只能点一次,不能累加.'],
    onlyOneUnitAtATime:['bool','action/hiddenAction','一次只有一个单位','填true时选中多个同类单位时,只有一个执行此行为.'],
    isGuiBlinking:['logicBoolean','action/hiddenAction','界面闪烁','此行为在界面中闪烁.'],
    alwaysSinglePress:['bool','action/hiddenAction','总是按一次','点击就执行,不需要确认.默认false,不需要在手机上确认,使用canPlayerCancel: false和allowMultipleInQueue: false也隐藏队列接口.'],
    isAlsoViewableByAllies:['bool','action/hiddenAction','显示给盟友','允许盟友玩家看到这个单位的动作,对显示其他玩家有用(例如导抛射体数量,收集的物品)'],
    isAlsoViewableByEnemies:['bool','action/hiddenAction','显示给敌人','允许敌方玩家看到这个单位的动作,对显示其他玩家有用(例如导抛射体数量,收集的物品)'],
    extraLagHidingInUI:['bool','action/hiddenAction','消除ui额外延迟','用于联机,在UI中立即更新而不需要从服务器确认的等待时间.'],
    streamingCost:['int','action/hiddenAction','流式造价','就像价格,但在建造时逐渐消耗资金,如果在构建过程中资源耗尽,建造或生产队列将暂停.就像是红警中那样.铁锈默认是预先扣除资金.'],
    switchPriceWithStreamingCost:['bool','action/hiddenAction','切换价格为流造价','快捷设置为默认资金消耗方式或为流式建造方式.建议使用模板快速将一个模组为所有单位切换流资源.'],
    ai_isDisabled:['logicBoolean','action/hiddenAction','AI被禁用','默认为false.使用此操作停止AI使用此动作.'],
    ai_isHighPriority:['logicBoolean','action/hiddenAction','AI高优先级','AI将优先执行此动作.'],
    ai_considerSameAsBuilding:['unitRef','action/hiddenAction','AI作为建筑','填建筑.考虑动作的优先级将会跟建筑物建优先级一样.'],
    autoTriggerOnEvent:['string','action/hiddenAction','自动触发事件','基于事件触发,事件有较短的有效时间.'],
    alsoTriggerOrQueueActionWithTarget:['unitRef','action/hiddenAction','也可以使用单位参考触发或队列操作','更改其他触发动作的目标,默认为当前动作的目标.影响诸如 fireTurretXAtGround,spawnUnits,thisActionTarget()等.'],
    autoTrigger:['logicBoolean','action/hiddenAction','自动触发','如果为true,则立即触发此操作的效果(忽略价格,isActive,isVisible,buildSpeed等)'],
    buildSpeed:['time','action/hiddenAction','建造速度','建造此动作所需要的时间,这个读条过程下面称之为准备以区分建造,机翻或是多个动作称之为队列.完成时的效果称为结果.'],
    RefundAllQueuedItems:['bool','action/hiddenAction','取消所有队列项目','并返还资源'],
    removeAllQueuedItemsWithoutRefund:['bool','action/hiddenAction','移除所有未建造完成的队列项目','不返还资源'],
    highPriorityQueue:['bool','action/hiddenAction','高优先级队列','默认为false.如果为true,则此操作将跳过队列中的所有其他低优先级操作.适用于fireTurret类动作.'],
    canPlayerCancel:['bool','action/hiddenAction','玩家可以取消','玩家可以取消此动作.'],
    whenBuilding_cannotMove:['bool','action/hiddenAction','建造时无法移动','执行操作准备时停止单位移动.适用于类似部署类动作.'],
    whenBuilding_playAnimation:['animationRef','action/hiddenAction','建造时播放动画','准备此动作时,播放[animation]中自定义的动画.'],
    whenBuilding_rotateTo:['float','action/hiddenAction','建造时旋转','准备此动作时,将单位主体旋转到该方向'],
    whenBuilding_rotateTo_orBackwards:['bool','action/hiddenAction','建造时旋转或反转','如果为true,则当角度较小时,允许从whenBuilding_rotateTo旋转180度.'],
    whenBuilding_rotateTo_waitTillRotated:['bool','action/hiddenAction','建造时需等待旋转完成','暂停准备的行为,直到旋转完成再继续.'],
    whenBuilding_temporarilyConvertTo:['unitRef','action/hiddenAction','建造时临时转换为','准备此操作时临时转换为另一个单位.原始单位的操作将保留.'],
    whenBuilding_temporarilyConvertTo_keepFields:['other','action/hiddenAction','建造时保留字段','不要在使用whenbuilding_temporaryconvertto时更改这些字段(无论是从或到),这对setUnitStats很有用'],
    whenBuilding_triggerAction:['actionRef','action/hiddenAction','建造时触发动作','准备时触发另一个动作'],
    whenBuilding_rotateTo_aimAtActionTarget:['bool','action/hiddenAction','建造时转向瞄准目标','准备时转向瞄准目标,luke:测试版注意:在某些情况下是坏的'],
    whenBuilding_rotateTo_rotateTurretX:['turretRef','action/hiddenAction','建造时转向指定炮塔','准备此操作时转向指定炮塔.'],
    spawnEffectsOnQueue:['effectRef','action/hiddenAction','队列产生效果','动作准备开始时产生的效果.'],
    playSoundToPlayerOnQueue:['file-sound','action/hiddenAction','队列播放声音','动作准备时播放给玩家的声音.'],
    requireConditional:['logicBoolean','action/hiddenAction','需要条件','如果结果为false,则跳过此操作所有结果.'],
    convertTo:['unitRef','action/hiddenAction','转换成','将你的单位转换为另一个单位.许多属性被保留.'],
    convertTo_keepCurrentTags:['bool','action/hiddenAction','转换时保留标签','将单位转换为另一个单位.并且保留拥有的标签.'],
    convertTo_keepCurrentFields:['other','action/hiddenAction','转换时保留字段','转换时不要更改这些字段,这在setUnitStats中很有用'],
    addEnergy:['float','action/hiddenAction','增加能量','为单位增加能量.需要设置了energyMax,否则不起作用.(与addResources相同:energy = X)'],
    addResources:['resourcesRef','action/hiddenAction','添加资源','操作完成后,添加这些资源.'],
    addResourcesScaledByAIHandicaps:['bool','action/hiddenAction','根据AI难度添加资源.','与addResources类似,但根据AI难度级别增加或减少.比例:最简单40%,简单70%,中等100%,困难140%,很困难180%,不可能370%'],
    addResourcesWithLogic:['dynamicFloat','action/hiddenAction','用逻辑添加资源','与addResources类似,但允许对资源值使用逻辑'],
    setResourcesWithLogic:['dynamicFloat','action/hiddenAction','用逻辑设置资源','将目标资源设置为此值,而不是添加.小心对全局资源使用.'],
    deleteSelf:['logicBoolean','action/hiddenAction','删除自身','删除执行此操作的单位,没有死亡效果,不执行死亡触发.'],
    resetCustomTimer:['logicBoolean','action/hiddenAction','重置自定义计时器','重置自定义计时器,与self.customTimer()结合使用'],
    setBodyRotation:['dynamicFloat','action/hiddenAction','设置躯干旋转','支持动态数字(memory之类的)'],
    setUnitStats:['other','action/hiddenAction','设置单位状态','字段值.允许在不转换的情况下动态更改选定的字段数量.支持=/+=/-=,动态数学/逻辑.'],
    resetUnitStats:['bool','action/hiddenAction','重置单位状态','将setUnitStats所做的更改重置为基本值'],
    shrinkArrays:['memory','action/hiddenAction','缩减数组','在数组中清除一些不需要的值并向前收缩(unit[]中的死亡或是被删除的单位(null),float[]和number[]中的0)'],
    setUnitMemory:['memory','action/hiddenAction','设置单位内存','键值对.改变此单元的内存,值可以用逻辑设定.内存必须首先用defineUnitMemory定义.'],
    alsoTriggerAction:['actionRef','action/hiddenAction','也执行动作','触发其他动作的结果.忽略行动的要求.'],
    alsoQueueAction:['actionRef','action/hiddenAction','也添加进队列','将另一个动作添加到序列中.忽略行动的要求'],
    alsoTriggerOrQueueActionConditional:['logicBoolean','action/hiddenAction','也执行队列或需执行条件','将此操作添加到序列.如果条件不满足(false)则忽略alsoQueueAction.默认true.'],
    playSoundAtUnit:['file-sound','action/hiddenAction','播放声音至单位','动作结束时在当前位置播放声音.'],
    playSoundGlobally:['file-sound','action/hiddenAction','播放声音至全图','播放全局声音,所有玩家都能听到.'],
    playSoundToPlayer:['file-sound','action/hiddenAction','播放声音至玩家','播放声音,只有自己能听到.'],
    fireTurretXAtGround:['turretRef','action/hiddenAction','指定攻击地面炮塔','使用此炮塔攻击玩家所指定的地面.'],
    fireTurretXAtGround_withOffset:['int','action/hiddenAction','指定攻击地面坐标','攻击指定坐标所在地面,不需要手动选择,'],
    fireTurretXAtGround_withProjectile:['projectileRef','action/hiddenAction','指定攻击地面抛射体','设定使用的抛射体,如果不设置则为炮塔默认的抛射体.'],
    fireTurretXAtGround_withTarget:['unitRef','action/hiddenAction','指定攻击目标','炮塔瞄准指示的单位或标记的位置发射'],
    fireTurretXAtGround_count:['int','action/hiddenAction','指定攻击地面数量','设置发射的抛射体数量,默认为1'],
    fireTurretXAtGround_onlyOverPassableTileOf:['string','action/hiddenAction','指定攻击地面类型','设置手动选择的地面需要满足这种运动方式.列表:NONE LAND BUILDING AIR WATER HOVER OVER_CLIFF OVER_CLIFF_WATER'],
    spawnUnits:['unitRef','action/hiddenAction','产生单位','产生指定单位,可用是多种.'],
    spawnEffects:['effectRef','action/hiddenAction','产生效果','产生指定效果'],
    produceUnits:['unitRef','action/hiddenAction','生产单位','类似spawnUnits,但是单位像正常生产一样,并获得路径的移动.1.13只对非建筑物生成的单位有效.'],
    offsetSelfAbsolute:['int','action/hiddenAction','自身位置偏移','使用时将修改单位当前位置,以单位为中心的绝对坐标.'],
    addUnitsIntoTransport:['unitRef','action/hiddenAction','添加单位到载具','将单位添加到运输槽中,在添加之前会检查空间是否够.'],
    deleteNumUnitsFromTransport:['int','action/hiddenAction','从载具中删除单位数','从载具中删除指定数量单位.'],
    deleteNumUnitsFromTransport_onlyWithTags:['string','action/hiddenAction','从载具删除带标签单位','从载具中删除具有此标签的指定数量单位.'],
    startUnloadingTransport:['bool','action/hiddenAction','开始卸载单位','开始卸载单位'],
    forceUnloadTransportNow:['bool','action/hiddenAction','强制卸载单位','立即强制卸载单位'],
    forceUnloadTransportNow_onlyOnSlot:['int','action/hiddenAction','强制卸载指定槽位单位','强制卸载指定槽位单位'],
    clearAllWaypoints:['bool','action/hiddenAction','清除所有路径点','清除当前所有路径.'],
    clearActiveWaypoint:['bool','action/hiddenAction','清除当前路径点','清除当前路径,也就是停止当前动作,执行下一个路径点.'],
    addWaypoint_type:['other','action/hiddenAction','添加路径点类型','填入添加的路径点类型.'],
    addWaypoint_unitType:['unitRef','action/hiddenAction','添加路径点所建造的单位类型','用于让当前单位去建造指定单位.仅用于addWaypoint_type:build'],
    addWaypoint_prepend:['bool','action/hiddenAction','添加路径点序列位置','添加到路径点的开头或结尾'],
    addWaypoint_triggerActionIfFailed:['actionRef','action/hiddenAction','添加路径点失败触发','如果target_nearestUnit找不到匹配项,因此无法添加路径点,则触发此操作'],
    addWaypoint_triggerActionIfMatched:['actionRef','action/hiddenAction','添加路径点匹配触发','如果操作添加的路径点是有效的,则执行指定操作.'],
    addWaypoint_maxTime:['time','action/hiddenAction','添加路径点检索时间','如果此路径点这么久还无法执行完成,则取消.'],
    addWaypoint_target_nearestUnit_tagged:['string','action/hiddenAction','添加路径点检索标签','添加的路径点目标为靠近有此标签的单位.'],
    addWaypoint_target_nearestUnit_team:['string','action/hiddenAction','添加路径点靠近队伍','添加的路径点目标需要的所属方:own|notOwn|neutral|allyNotOwn|ally|enemy|any'],
    addWaypoint_target_nearestUnit_maxRange:['float','action/hiddenAction','添加路径点检索范围','添加的路径点靠近某目标时考虑的最大范围.'],
    addWaypoint_target_mapMustBeReachable:['bool','action/hiddenAction','添加路径点路径可达','添加的路径点靠近某目标时必须是有可到达路径的.'],
    addWaypoint_target_fromReference:['unitRef','action/hiddenAction','添加路径点来自参考','添加路径点来自单位信息引用.'],
    addWaypoint_position_offsetFromSelf:['int','action/hiddenAction','添加路径点坐标偏移','添加的路径点相对于自身偏移的坐标.'],
    addWaypoint_position_fromAction:['bool','action/hiddenAction','添加路径点动作坐标','将当前动作指定的坐标添加进路径序列中.'],
    addWaypoint_position_randomOffsetFromSelf:['int','action/hiddenAction','添加路径点随机偏移','添加坐标进路径点时的随机值.'],
    addWaypoint_position_relativeOffsetFromSelf:['int','action/hiddenAction','添加路径点相对偏移','添加路径点位置相对自身偏移量.'],
    addWaypoint_target_randomUnit_tagged:['unit','action/hiddenAction','添加指定标签的随机单位','添加路径点单位为指定标签的随机单位'],
    addWaypoint_target_randomUnit_team:['string','action/hiddenAction','添加指定队伍的随机单位','添加路径点单位为指定队伍的随机单位'],
    addWaypoint_target_randomUnit_maxRange:['int','action/hiddenAction','添加指定范围的随机单位','添加路径点单位为指定范围的随机单位'],
    addAllActionCooldownsTime:['time','action/hiddenAction','增加所有动作冷却时间','增加所有action的冷却时间.'],
    addAllActionCooldownsFor:['time','action/hiddenAction','对于所有动作而言增加冷却时间',''],
    addActionCooldownTime:['time','action/hiddenAction','增加动作冷却时间','增加动作冷却时间,制作先充能再使用的action更加容易了.'],
    addActionCooldownApplyToActions:['actionRef','action/hiddenAction','添加指定动作冷却时间','action id,设置addActionCooldownTime的目标.默认情况下是当前操作本身.'],
    clearAllActionCooldowns:['bool','action/hiddenAction','清除所有动作冷却时间','清除所有动作冷却时间,使其立即可用.'],
    playAnimation:['animationRef','action/hiddenAction','播放动画','播放[animation_xx]类型动画.'],
    playAnimationIfNotPlaying:['animationRef','action/hiddenAction','如果未播放动画则播放动画','如果没有播放该动画,就播放该动画'],
    finishPlayingLastAnimation:['bool','action/hiddenAction','完成最会动画','完成最后一个动画,包括融合'],
    stopLastAnimation:['bool','action/hiddenAction','停止最后动画','停止最后一个动画,跳过融合'],
    switchToNeutralTeam:['bool','action/hiddenAction','切换至中立队伍','将队伍更改为中立.该队伍与其他所有队伍结盟.除非使用[core]stayNeutral:true,否则它将被附近的单位捕获.'],
    switchToAggressiveTeam:['bool','action/hiddenAction','切换至侵略性队伍','将此单位队伍更改为侵略性的内置队伍.不能被其它单位捕获.'],
    switchToTeam:['dynamicFloat','action/hiddenAction','切换至特定队伍','切换到小队id.从0开始.(中立-1,敌对中立-2)'],
    takeResources:['resourceRef','action/hiddenAction','提取资源','提取资源,至少写一种资源.'],
    takeResources_includeUnitsInTransport:['bool','action/hiddenAction','提取资源包括载具内','提取资源,包括载具内单位.'],
    takeResources_includeParent:['bool','action/hiddenAction','提取资源包括父单位或载具','提取资源,包括父单位和运输载具.'],
    takeResources_includeReference:['unitRef','action/hiddenAction','提取资源包括引用','提取资源包括指定单位.'],
    takeResources_includeUnitsWithinRange:['float','action/hiddenAction','提取资源范围','提取资源,在此范围内.'],
    takeResources_includeUnitsWithinRange_team:['string','action/hiddenAction','提取资源队伍','提取在此范围内队伍的资源.与“includeUnitsWithinRange”一起使用,默认为own.可以是:own|notOwn|neutral|allyNotOwn|ally|enemy|any'],
    takeResources_excludeUnitsWithoutTags:['string','action/hiddenAction','提取资源标签','提取资源,但排除没有此标签的单位.'],
    takeResources_excludeUnitsWithTheseResources:['resourceRef','action/hiddenAction','提取资源排除资源','提取资源,不包括拥有这些资源的单位.'],
    takeResources_excludeUnitsWithoutAllResources:['bool','action/hiddenAction','提取资源排除不足','提取资源,排除缺乏资源者.默认为true.'],
    takeResources_triggerActionIfAnyCollected:['actionRef','action/hiddenAction','提取资源成功触发','如果有任何收集,则触发动作.'],
    takeResources_triggerActionIfNoneCollected:['actionRef','action/hiddenAction','提取资源失败触发','如果没有收集,则触发操作.'],
    takeResources_discardCollected:['bool','action/hiddenAction','提取资源删除','从目标中获取资源,但不向自身添加也就是删除.'],
    takeResources_keepResourcesOnTarget:['bool','action/hiddenAction','提取资源克隆','不从目标添加或删除资源.但克隆资源.与takeResources_discardCollected和takeResources_triggerActionIfAnyCollected一起使用以创建资源检测器.'],
    takeResources_maxUnits:['int','action/hiddenAction','提取资源目标量','最多从多少单位提取资源,默认为1.'],
    takeResources_directTransferStoppingAtZero:['bool','action/hiddenAction','提取资源直接转换至零','提取资源直接转换至0,用于完全转换.如果目标上的资源少于转帐金额,则只有剩余的资源将被转帐.不支持使用其他一些takeResources_*代码'],
    takeResources_searchOnly:['bool','action/hiddenAction','获取资源仅供搜索','提取资源完全用于搜索范围内的单位而不是改动资源,与forEach配合使用'],
    takeResources_saveFirstUnitToCustomTarget1:['bool','action/hiddenAction','提取资源保存第一个单元自定义目标1','提取资源保存第一个单元一定是自定义目标1'],
    takeResources_saveFirstUnitToCustomTarget2:['bool','action/hiddenAction','提取资源保存第一个单元自定义目标2','提取资源保存第一个单元一定是自定义目标2'],
    convertResource_from:['resourceRef','action/hiddenAction','转换资源来源','将此资源转换资源为别的资源.'],
    convertResource_to:['resourceRef','action/hiddenAction','转换资源至','将资源转后为此资源,要提供的自定义资源的名称'],
    convertResource_minAmount:['int','action/hiddenAction','转换资源至少','如果来源中资源小于该数量,则跳过.默认为0.在大多数情况下可能不需要.'],
    convertResource_maxAmount:['int','action/hiddenAction','转换资源至多','“来源资源”和“转换后资源”之间的最大转化量'],
    convertResource_multiplyAmountBy:['float','action/hiddenAction','转换资源倍率','资源转换倍率,不影响提取的数量.默认值为1.'],
    resourceAmount:['resourceRef','action/hiddenAction','资源类型','自定义资源的名称,使用以下3个键进行设置.所有键都是可选的,可以一起使用.'],
    resourceAmount_setValue:['float','action/hiddenAction','资源类型设置数值','设置此资源的绝对值,忽略资源的当前值.默认忽略.'],
    resourceAmount_addOtherResource:['resourceRef','action/hiddenAction','资源类型添加至','添加到其中的另一个自定义资源的名称.可以不使用resourceAmount_setValue,只是添加资源.或者使用resourceAmount_setValue:0复制一个资源值.'],
    resourceAmount_multiplyBy:['float','action/hiddenAction','资源类型乘数','默认值为1.将当前资源值乘上此值.'],
    attachments_addNewUnits:['unit','action/hiddenAction','附属添加单位','添加单位作为其子单位,需要定义附属位置.'],
    attachments_deleteNumUnits:['int','action/hiddenAction','附属删除单位数','删除单位数量'],
    attachments_onlyOnSlots:['string','action/hiddenAction','附属添加于槽位','只将附属物添加于特定的槽位'],
    disconnectFromParent:['bool','action/hiddenAction','脱离父单位','用于子单位脱离父单位'],
    attachments_unload:['bool','action/hiddenAction','卸载附属','卸载所有附属.可以与attachments_onlyonslot一起使用.与运输单位卸载相同'],
    attachments_disconnect:['bool','action/hiddenAction','附属断开连接','断开所有现在所在位置的附属.可以与attachments_onlyonslot一起使用.'],
    temporarilyAddTags:['string','action/hiddenAction','临时标签添加','将标签添加到单位,直到转换或重置.'],
    temporarilyRemoveTags:['string','action/hiddenAction','临时标签删除','从单位上删除标签,直到将其转换或重置.'],
    resetToDefaultTags:['bool','action/hiddenAction','标签重置','重置为默认标签.'],
    addGlobalTeamTags:['string','action/hiddenAction','添加全局标签','为玩家的团队添加此全局标签.与self.globalTeamTags()一起使用可创建解锁和升级.'],
    removeGlobalTeamTags:['string','action/hiddenAction','移除全局标签','从玩家队伍中删除此全局标签.'],
    showMessageToPlayer:['string','action/hiddenAction','发送消息至玩家','向玩家个人发送信息.自己发给自己.'],
    'showMessageToPlayer_language':['string','action/hiddenAction','发送消息至玩家','向玩家个人发送信息.自己发给自己.多语言版.注意:这种格式是支持几乎所有字符串显示给玩家,即使当引用不显示它'],
    showMessageToAllPlayers:['string','action/hiddenAction','发送消息至所有','向所有玩家发送消息.'],
    showMessageToAllEnemyPlayers:['string','action/hiddenAction','发送消息给所有敌人','发送消息给所有敌人.'],
    showQuickWarLogToPlayer:['string','action/hiddenAction','发送战争快报至玩家','向玩家个人发送战争快报.(在左下角)'],
    showQuickWarLogToAllPlayers:['string','action/hiddenAction','发送战争快报至所有','向所有玩家发送战争快报.(在左下角)'],
    debugMessage:['string','action/hiddenAction','排错信息','仅在启用调试模式的沙盒模式中显示.'],
    sendMessageTo:['unitRef','action/hiddenAction','发送信息至','填单位/单位引用'],
    sendMessageWithData:['other','action/hiddenAction','发送信息与数据','填变量=XXX'],
    sendMessageWithTags:['string','action/hiddenAction','发送信息需要标签','填指定标签'],
    setCustomTarget1:['unitRef/unit','action/hiddenAction','设置自定义目标1','建议填单位引用'],
    setCustomTarget2:['unitRef/unit','action/hiddenAction','设置自定义目标2','建议填单位引用'],
    swapCustomTarget1And2:['bool','action/hiddenAction','交换自定义目标1和2','填布尔值'],
    setHeight:['dynamicFloat','action/hiddenAction','设置高度','新增设置高度,可以使用逻辑'],
    teleportTo:['unitRef','action/hiddenAction','传送到','传送到(填单位参考)'],
    transportTargetNow:['unitRef','action/hiddenAction','主动装运目标','立即主动装载目标(1.15版本无法正常使用,会导致单位装载自己)'],
    id:['int','action/hiddenAction','编号','用于在单位转换时的连接被加入队列的动作'],
    fireTurretXAtGround_showGuideDecals:['decalRef','action/hiddenAction','指定攻击地面时显示贴花','当选择发射位置时显示贴花(参考核抛射体选择发射地点时长按显示)'],
    autoTriggerOnEventRecursionLimit:['int','action/hiddenAction','自动触发事件递归限制(默认为1)','同一个事件重复触发的限制次数,默认为1'],
    takeResources_triggerActionForEach:['actionRef','action/hiddenAction','为提取资源找到的每个单位(提取目标)调用这个动作','遍历提取资源搜索到的每个单位,将thisActionTarget设为该单位并触发填入的action'],
    aiTags:['string','action/hiddenAction','AI的标签','随便填一个得了(专门给AI用的)'],
    aiUse:['string','action/hiddenAction','AI对该行动的使用方式','可填:auto(自动),launch(发射),launchAmmo(增加弹药),disabled(残缺),upGrade(升级),movementChange(运动改变),sameAsBuilding(与建筑物相同)'],
    alsoTriggerActionRepeat:['dynamicFloat','action/hiddenAction','重复触发行动次数','每次重复时自动index++, 用于创建循环或处理数组.'],
    autoTriggerCheckRate:['other','action/hiddenAction','位于括号中','Spawn units line']
},

placementRule:{
    anyRuleInGroup:['string','placementRule','放置规则组','放置规则组名.(仅需要通过此组规则中的1条,而不是全部通过.在其他放置规则中可使用相同的组名称来创建组.)'],
    searchTags:['string','placementRule','检索标签','搜索至少包含这些标签之一的任何单位'],
    searchTeam:['string','placementRule','检索队伍','要搜索的团队可以是:自身|中立|盟友非自身|盟友|敌人|任何.  own|neutral|allyNotOwn|ally|enemy|any'],
    searchOffsetX:['float','placementRule','检索偏移','检索偏移,默认为0'],
    searchOffsetY:['float','placementRule','检索偏移','检索偏移,默认为0'],
    searchDistance:['float','placementRule','搜索距离','搜索距离'],
    excludeIncompleteBuildings:['bool','placementRule','排除不完整建筑','排除不完整的建筑'],
    excludeNonBuildings:['bool','placementRule','排除非建筑','排除非建筑'],
    minCount:['int','placementRule','最小数量','设定需要在搜索中找到的单位的最小数量.(如需要靠近某物).默认值为0'],
    maxCount:['int','placementRule','最大数量','在匹配失败前设置最大单位数量(例如不能接近某个值).默认为无限的'],
    blocksPlacement:['bool','placementRule','禁止放置','禁止放置.默认为true.'],
    cannotPlaceMessage:['other','placementRule','失败信息','如果此放置规则失败,则会向玩家显示消息(将成为mergedRuleGroup中的第一个失败规则)'],
    'cannotPlaceMessage_language':['other','placementRule','失败信息(多语言)','如果此放置规则失败,则会向玩家显示消息(将成为mergedRuleGroup中的第一个失败规则)(支持多种语言显示)'],
    checkEachTile:['bool','placementRule','检查每个地块','[true / false]默认为true(仅对测试单元中心设置为false,true会检查显示在放置网格上的单元下方的每个图块)'],
    aiSuggestionOnly:['bool','placementRule','仅限ai建议','']
},

resource:{
    stackHorizontal:['bool','resource/global_resource','堆叠水平','定义与玩家所有单位共享的新资源,其工作方式类似于内置的资金.添加到"all-units.template"(位于mod根目录)'],
    displayName:['string','resource/global_resource','显示名称','用户界面中此资源的名称'],
    displayNameShort:['string','resource/global_resource','显示短名称','在较小的UI上显示的文本(如action的悬浮文本)默认为displayName'],
    hidden:['bool','resource/global_resource','隐藏','向玩家隐藏此资源'],
    priority:['float','resource/global_resource','优先级','如果多个mod单元中定义了同名的资源,则使用具有最高优先级的displayName/displayColor'],
    displayColor:['color','resource/global_resource','显示颜色','颜色,可以是十六进制,带有可选的alpha'],
    displayRoundedDown:['bool','resource/global_resource','显示为整数','对资源进行舍入显示为整数.'],
    displayWhenZero:['bool','resource/global_resource','为零时显示','资源为零时也显示.'],
    iconImageUseInText:['bool','resource/global_resource','在动作(action)的描述中显示资源图标','默认为true'],
    iconImage:['file-image','resource/global_resource','图标','自定义该资源的象征图像'],
    displayNameHideWhenIconShownInText:['bool','resource/global_resource','显示名称在文本中显示图标时隐藏','(默认为false) - 有助于缩短说明文本'],
    displayNameHideWhenIconShownInHUD:['bool','resource/global_resource','文本显示名称在HUD中显示图标时隐藏','默认为false'],
    displayColorUseInText:['bool','resource/global_resource','在动作(action)的描述中显示资源颜色','默认为true'],
    appendResourceInHUD:['resourceRef','resource/global_resource','在HUD中追加资源','使用后,在游戏界面中这个资源值将会叠在目标资源值的后面,并且继承目标资源的颜色和图标.这个资源值后面也能继续叠加其它资源值'],
    displayPRefixInHUD:['string','resource/global_resource','在HUD中显示前缀','在资源数值前显示的文本,会替换掉资源原本的名称以及冒号,和appendResourceInHUD一同使用时可以用来显示资源限制之类的内容'],
    displayPostfixInHUD:['string','resource/global_resource','在HUD中显示后缀','在资源数值之后显示的文本'],
    displayTextAppendResource:['resourceRef','resource/global_resource','显示附加资源文本',''],
    displayTextAppendResourceWithGap:['bool','resource/global_resource','显示具有间隙的附加资源文本','默认为false.将不相关的资源放在同一行时,在资源之间添加空格.'],
    appendResourceInHUD_whenThisZero:['bool','resource/global_resource','在此为零时在HUD中追加资源','默认为true.为false时附加资源(如用于显示最大值的资源)与父资源一起隐藏.'],
    includeInStats:['bool','resource/global_resource','包括值',''],
    valueInStats:['bool/int','resource/global_resource','统计值','(如果全局且未隐藏,则默认为 1(true),否则默认为 0(false)) - 用于游戏后的统计和回放的排行榜'],
    displayInHud:['bool','resource/global_resource','在HUD里显示','- 用于 appendResourceInHUD(在HUD中追加资源) 中的资源,而不会隐藏它们,这有其他副作用'],
    displayDigitGrouping:['string','resource/global_resource','资源数字分组','none/comma/space--(空,逗号,空格)(例如资源数量10000,空格分组就是10 000)'],
    displayPos:['int','resource/global_resource','显示排序','显示优先级,越小越居上'],
    displayWithRounding:['bool','resource/global_resource','四舍五入取整',''],
    displayTextPRefix:['string','resource/global_resource','显示文本前缀',''],
    displayTextPostfix:['string','resource/global_resource','显示文本后缀','']
},

decal:{
    layer:['other','decal','绘制图层,可以是前面几种','可以填入的值:shadow(阴影), beforeBody(在主体之上), afterBody(在主体之下), onTop(在最顶端), beforeUI(在显示界面之上),inactive(在行动中)'],
    order:['float','decal','排序(默认为0并且按照ini里的顺序)','使用其他贴花排序,默认为0,并使用其在ini中显示的顺序.'],
    onlyWhenSelectedByOwnPlayer:['bool','decal','仅在被拥有者选中时绘制','只有当玩家查看本单位时,才可绘制贴花.'],
    onlyWhenSelectedByEnemyPlayer:['bool','decal','被敌方玩家选中时绘制','被敌方玩家选中时绘制'],
    onlyWhenSelectedByAllyNotOwnPlayer:['bool','decal','非自身队伍的盟友选中时绘制','非自身队伍的盟友选中时绘制'],
    onlyWhenSelectedByAnyPlayer:['bool','decal','被任意玩家选中时绘制','在任何玩家选中本单位值绘制贴花'],
    includeParentsSelection:['bool','decal','包括被父单位选中','检查父项选择'],
    onlyPlayersWithUnitControl:['bool','decal','仅在查看者能够控制此单位时绘制','仅当观看者可以控制此单元时才绘制贴花'],
    onlyTeam:['string','decal','仅在查看者为特定队伍时显示','仅当单位和查看玩家之间的关系时绘制,可以填写:己方|非己方|中立方|除自己外盟友|盟友|敌方|任意'],
    onlyWithZoomLevelOrMore:['bool','decal','仅当缩放到当前大小或更大时绘制','屏幕上.建议设置在三维立体体积元素样式单位,小细节或小阴影的贴花上.缩小一点时会隐藏贴花.当许多单元可能需要时,有助于减少性能的调用'],
    onlyWhileActive:['bool','decal','仅在单位建造完成时绘制','仅在单位完成时绘制,比如建造者建造一般的建筑就不算'],
    onlyOnBodyFrameOf:['int','decal','只在主体关键帧时绘制',''],
    onlyWhileAlive:['bool','decal','仅在存活时绘制','如果图层(layer)为beforeUI默认为true,否则false,为ture死后消失'],
    onlyInPreview:['bool','decal','仅在侧边栏和建筑放置预览中显示','仅在侧边栏中显示,以及建筑布局预览'],
    onlyOnNonPreview:['bool','decal','仅在非预览中显示(与上一条相反)','仅在真实单元上显示,而不是动作侧边栏等'],
    imageScale:['dynamicFloat','decal','图像缩放(倍数)','图像缩放(倍数)'],
    imageScaleX:['dynamicFloat','decal','图像X缩放','图像X缩放'],
    imageScaleY:['dynamicFloat','decal','图像Y缩放','图像Y缩放'],
    image:['file-image','decal','图像','图像'],
    teamColors:['bool','decal','阵营色','在图像和图像堆栈上启用队伍色'],
    imageStack:['file-image','decal','图像列表','推荐用于三维立体体积元素样式单位的图像列表,因为当使用相同的子画面时,可以批量绘制图像.)(目前没有实例所以不清楚,但确定是用于3d单位'],
    stack_hOffset:['int','decal','列表图像高度偏移','用于三维立体体积元素样式单位.'],
    stack_frameOffset:['int','decal','列表图像帧偏移','用于三维立体体积元素样式单位.'],
    stack_drawInReverseOrder:['int','decal','列表图像绘图顺序','列表图像绘图顺序'],
    stack_indexStart:['dynamicFloat','decal','列表图像起始图像','动态整数(图像堆栈的起始图像)'],
    stack_indexCount:['dynamicFloat','decal','列表图像数量','动态整数(要绘制的图像数.可以设置为1以使用堆栈索引开始作为图像选择器)'],
    total_frames:['int','decal','总帧数(跟后面两个二选一使用)','使用总帧数或者帧宽度/帧高度'],
    frame_verticalOrdering:['bool','decal','帧清单',''],
    frame_width:['int','decal','帧宽度','帧宽度'],
    frame_height:['int','decal','帧高度','帧高度'],
    frame:['dynamicFloat','decal','帧','支持动态值'],
    addBodyFrameMultipliedBy:['int','decal','添加主体帧乘数',''],
    isVisible:['logicBoolean','decal','可见(可以使用逻辑)',''],
    xOffsetRelative:['float','decal','X相对偏移','用于修改decal的相对位置,不支持动态值,动态请使用basePosition'],
    yOffsetRelative:['float','decal','Y相对偏移','用于修改decal的相对位置,不支持动态值,动态请使用basePosition'],
    xOffsetAbsolute:['dynamicFloat','decal','X绝对偏移','用于修改decal的绝对位置,支持动态值'],
    yOffsetAbsolute:['dynamicFloat','decal','Y绝对偏移','用于修改decal的绝对位置,支持动态值'],
    hOffset:['float','decal','高度偏移','用于修改decal的高度'],
    dirOffset:['float','decal','角度偏移','角度偏移'],
    pivotOffset:['float','decal','坐标系旋转','相当于把单位定位的直角坐标系旋转该角度,然后重新确定xy. 只影响X/Y相对偏移,不旋转图像'],
    alwaysStartDirAtZero:['bool','decal','总是固定角度为零(总是朝上)','用于制作类似单位UI'],
    alwaysStartHeightAtZero:['bool','decal','总是固定高度为零','对制作空中和两栖单位的UI有用'],
    basePosition:['unitRef','decal','位置参考来自','decal将以填入的单位作为中心渲染'],
    basePositionFromLeg:['legRef','decal','以脚为中心位置','decal将以填入的腿脚作为中心渲染'],
    basePositionFromTurret:['turretRef','decal','以炮塔为中心位置','decal将以填入的炮塔作为中心渲染'],
    basePositionFromLegEnd:['leg/armRef','decal','decal将以填入的腿脚或胳膊的末端作为中心渲染'],
    drawLineTo:['unitRef','decal','绘制线条到','绘制一条线在该单位和填入的单位之间'],
    image_shadow:['file-image','decal','阴影图像','阴影图像'],
    shadowOffsetX:['float','decal','阴影偏移X','阴影偏移X'],
    shadowOffsetY:['float','decal','阴影偏移Y','阴影偏移Y'],
    color:['color','decal','颜色','影响图像和线条.'],
    alpha:['dynamicFloat','decal','透明度','支持0-1动态浮点数,以颜色堆叠透明度. 影响图像和线条.'],
    lineWidth:['float','decal','线宽度','线宽度']
},

template: {
    '@copyFromSection':['other','template','复制自节','本节的内容从该节复制'],
    '@copyFrom_skipThisSection':['bool','template','复制跳过节','让[core]的copyFrom不从目标ini复制该节的内容'],
    '@define ':['other','template','定义局部宏','定义一个局部宏(作用域为section)'],
    '@global ':['other','template','定义全局宏','定义一个全局宏(作用域为section)']
},

}
module.exports = {allKeys};


